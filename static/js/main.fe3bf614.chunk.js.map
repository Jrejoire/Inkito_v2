{"version":3,"sources":["middlewares/json.tsx","stores/appStore.js","middlewares/format.tsx","components/reader/page.tsx","components/reader/pages.tsx","components/reader/menu/bottom/archive.tsx","components/reader/menu/bottom/sections/interactSection/buttons/subscribeButton.tsx","components/reader/menu/bottom/sections/interactSection/interactSection.tsx","components/reader/menu/bottom/sections/settingsSection/settingsSection.tsx","components/reader/menu/bottom/share.tsx","components/reader/menu/bottom/sections/votingSection/votingSection.tsx","components/reader/menu/bottom/bottom.tsx","components/comments/editCommentBlock.tsx","components/comments/commentBlock.tsx","components/comments/commentList.tsx","components/comments/comments.tsx","components/reader/menu/blog.tsx","components/reader/menu/controls.tsx","components/reader/menu/top.tsx","components/reader/menu/menu.tsx","routes/reader.tsx","middlewares/url.tsx","routes/routes.tsx","containers/app.tsx","reportWebVitals.ts","index.tsx","middlewares/imgify.js"],"names":["safeJSON","json","parsed","JSON","parse","e","console","log","data","replacer","space","string","stringify","api","require","Client","app","callbackURL","accessToken","scope","ENDPOINT","StoreContext","React","createContext","StoreProvider","children","store","useLocalStore","categories","activeComicCategory","activeNovelCategory","activeComicTrend","activeNovelTrend","trendingComics","newComics","trendingNovels","newNovels","last_trendyComic","last_newComic","last_trendyNovel","last_newNovel","seriesLinks","seriesDetail","seriesInfo","activeInfoTab","activeComments","authorInfo","userDetail","all_followers","all_following","loginLink","zoom","zoomIsActive","clickedSeriesAuthor","clickedSeriesTitle","clickedSeriesContent","startPage","currentPage","loginIsActive","navIsHidden","navMenuIsActive","shareMenuIsActive","shareMenuBottomIsActive","cookieConsent","replyIsActive","fetchComicState","fetchNovelState","postDetailState","seriesDetailState","seriesLinkState","commentState","authorInfoState","voteState","followState","updateProfileState","uploadState","updateActiveComicCategory","className","updateActiveNovelCategory","updateActiveComicTrend","trend","updateActiveNovelTrend","updateCurrentPage","page","scrollCurrentPage","removeDuplicateContent","newContent","trendyContent","trendyIds","map","content","seriesId","filter","includes","resetSeriesDetail","toggleInfoTab","info","closeInfoTab","toggleComments","toggleZoomBanner","value","undefined","toggleLogin","toggleNav","toggleNavMenu","toggleShareMenu","toggleShareMenuBottom","updateZoom","increment","checkCookieConsent","cookie","localStorage","getItem","toggleReplyIsActive","addTrendyComic","res","comic","length","some","object","push","bookmark","addNewComic","addTrendyNovel","novel","addNewNovel","fetchContent","type","limit","a","allComics","skip","allNovels","options","method","headers","Headers","body","fetch","then","runInAction","new","trendy","initHSLogin","text","link","login","user","params","username","err","token","getUserDetail","localAccess","localUser","access_token","URLSearchParams","document","location","search","get","setItem","logOut","status","href","catch","follow","follower","following","unfollow","unfollower","unfollowing","followers","vote","voter","author","permlink","weight","Promise","resolve","setTimeout","comment","updateProfile","account_name","metadata","account","json_metadata","posting_json_metadata","extensions","getUserInfo","fetchPermlinks","title","series_title","seriesLength","permlinks","fetchSeriesDetail","replies","fetchComments","result","fetchAvatar","avatar","getFollowers","author_image","fetchAuthorSeries","authorSeries","series","Set","fetchSeriesInfo","fetchAuthorInfo","getFollowCount","getFollowing","Provider","isContentRanked","contentDate","g1","Date","toISOString","substring","t1","g2","t2","g1Split","split","g2Split","g1Int","parseInt","g2Int","g3","timeAgo","prevPage","Page","episode","images","config","useEffect","ImageRender","observer","url","index","mode","src","alt","Pages","toggleRender","setPage","setEpisode","pageRef","useRef","leavingPage","executeScroll","current","scrollIntoView","PageTrigger","handleViewport","props","inViewport","forwardedRef","pageIndex","ref","EndTrigger","background","PageRenderer","contentArray","i","image","j","onLeaveViewport","Archive","showMenu","hideArchive","actions","go","useState","archiveIndex","setArchiveIndex","indexLength","setIndexLength","indexRef","containerRef","timeoutRef","fetchAll","scrollToRef","clearTimeout","onClick","archiveActions","set","scroll","next","scrollLeft","scrollTo","top","left","behavior","previous","first","last","lastEpisode","lastPage","lastIndex","to","smooth","offsetLeft","window","innerWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","SubscribeButton","useContext","InteractSection","toggleSharing","toJS","name","SettingsSection","showArchive","toggleBgColor","toggleMode","Share","EmailShareButton","subject","EmailIcon","size","round","FacebookShareButton","quote","hashtag","FacebookIcon","TwitterShareButton","hashtags","via","TwitterIcon","TumblrShareButton","tags","caption","TumblrIcon","PinterestShareButton","media","description","PinterestIcon","TelegramShareButton","TelegramIcon","RedditShareButton","RedditIcon","WhatsappShareButton","WhatsappIcon","stroke-width","VotingSection","userData","voteIsPending","setVotePending","autorun","RankBullets","number","voted","bullets","active_votes","ranked","Math","voting_power","style","height","Bottom","setShowMenu","setShowArchive","isSharing","setIsSharing","onMouseOver","onMouseLeave","EditCommentBlock","commentBody","cancelAction","updateCb","parent","editorState","setEditorState","isLoading","setIsLoading","sendAction","parentAuthor","parentPermlink","jsonMetadata","now","payload","response","pending_payout_value","total_payout_value","created","defaultValue","placeholder","onChange","CommentBlock","reward","replace","activeComment","setActiveComment","editComment","setEditComment","votedComment","setVotedComment","md","Remarkable","html","use","imgify","toggleActiveComment","toggleEditComment","updateComment","updateSelf","handleVote","CommentBody","dangerouslySetInnerHTML","__html","render","slice","CommentList","List","comments","forEach","Comments","hasComment","setHasComment","Blog","setBody","showAll","setShowAll","trim","summary","Controls","id","Top","FollowerCount","Menu","showComments","setShowComments","Reader","reference","address","indexOfReader","indexOf","seriesTitle","getUrlVars","setSeriesInfo","setRanked","setPermlinks","setSeries","sort","transition","setConfig","isSubscribed","autoVoteOn","disableVote","setUserData","setToggleRender","processPermlinks","authorId","titleId","toLowerCase","seriesIdGenerator","processSeriesInfo","addEpisodes","emptySeries","getRankedNumber","fetchEpisode","infos","addAllEpisodes","episodeNumber","tempSeries","blackListImages","regexBlackList","regex","match","toggleAutoVote","currentLength","previousLength","Routes","addEventListener","handleFirstTab","removeEventListener","keyCode","classList","add","basename","path","App","lang","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","parseTokens","state","l","tokens","sources","nodes","blockTokens","afterRule","firstImage","level","concat","Object","defineProperty","exports","core","ruler"],"mappings":"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","file":"static/js/main.fe3bf614.chunk.js","sourcesContent":["export const safeJSON = {\r\n    parse: (json : any) => {\r\n        let parsed\r\n        try {\r\n            parsed = JSON.parse(json)\r\n        } catch (e) {\r\n            console.log('Error: ' + e)\r\n            console.log(json);\r\n        }\r\n    \r\n        return parsed\r\n    },\r\n    stringify: (data : object, replacer? : any, space? : string) => {\r\n        let string\r\n    \r\n        try {\r\n            string = JSON.stringify(data, replacer, space)\r\n        } catch (e) {\r\n            console.log('Error: ' + e)\r\n        }\r\n    \r\n        return string\r\n    }\r\n}    ","import React from 'react';\r\nimport { useLocalStore } from 'mobx-react';\r\nimport { runInAction } from 'mobx';\r\nimport { safeJSON } from '../middlewares/json';\r\nimport { computeHeadingLevel } from '@testing-library/react';\r\nimport { nextTick } from 'process';\r\n\r\n//Hivesigner\r\nvar hivesigner = require('hivesigner');\r\n\r\nvar api = new hivesigner.Client({\r\n    app: 'inkito',\r\n    callbackURL: 'https://www.inkito.io',\r\n    accessToken: 'access_token',\r\n    scope: ['vote', 'comment', 'follow', 'posting'],\r\n});\r\n\r\nvar ENDPOINT = \"https://inkito-ipfs.herokuapp.com\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    ENDPOINT = \"http://localhost:5000\";\r\n}\r\n\r\nconst StoreContext = React.createContext(\"\");\r\n\r\nexport function StoreProvider({ children }) {\r\n    const store = useLocalStore(() => ({\r\n        // State Variables\r\n        //Categories array and active\r\n        categories: [\r\n            \"All Categories\",\r\n            \"Action\",\r\n            \"Comedy\",\r\n            \"Drama\",\r\n            \"Fantasy\",\r\n            \"Horror\",\r\n            \"Mystery\",\r\n            \"Romance\",\r\n            \"Sci-Fi\",\r\n            \"Slice Of Life\"\r\n        ],\r\n        activeComicCategory: \"All Categories\",\r\n        activeNovelCategory: \"All Categories\",\r\n\r\n        //Trend active (trending or new)\r\n        activeComicTrend: \"all\",\r\n        activeNovelTrend: \"all\",\r\n\r\n        //Array for promoted content\r\n        /*promoArray: [\r\n            {\r\n                title: \"Shades Of Men\",\r\n                author: \"Jrej\",\r\n                thumbnail: \"https://picsum.photos/400/300\",\r\n                link: \"https://inkito.io/comicReader/jrej/ghoulredone\"\r\n            },\r\n            {\r\n                title: \"IN/SYS\",\r\n                author: \"Jrej\",\r\n                thumbnail: \"https://picsum.photos/400/300\",\r\n                link: \"https://inkito.io/comicReader/jrej/shadesofmen\"\r\n            }\r\n        ],*/\r\n\r\n        //Content Display Data\r\n        trendingComics: [],\r\n        newComics: [],\r\n        trendingNovels: [],\r\n        newNovels: [],\r\n        //Search bookmark\r\n        last_trendyComic: {},\r\n        last_newComic: {},\r\n        last_trendyNovel: {},\r\n        last_newNovel: {},\r\n\r\n        seriesLinks: [],\r\n        seriesDetail: [],\r\n        seriesInfo: {},\r\n        activeInfoTab: [],\r\n        activeComments: [],\r\n        authorInfo: [],\r\n        userDetail: {},\r\n        all_followers: [],\r\n        all_following: [],\r\n        loginLink: \"\",\r\n        zoom: 50,\r\n        zoomIsActive: false,\r\n        clickedSeriesAuthor: \"\",\r\n        clickedSeriesTitle: \"\",\r\n        clickedSeriesContent: \"\",\r\n        startPage: 0,\r\n        currentPage: 0,\r\n        loginIsActive: false,\r\n        navIsHidden: false,\r\n        navMenuIsActive: false,\r\n        shareMenuIsActive: false,\r\n        shareMenuBottomIsActive: false,\r\n        cookieConsent: null,\r\n        replyIsActive: \"\",\r\n\r\n        //Data states\r\n        fetchComicState: \"\",\r\n        fetchNovelState: \"\",\r\n        postDetailState: \"\",\r\n        seriesDetailState: \"\",\r\n        seriesLinkState: \"\",\r\n        commentState: \"\",\r\n        authorInfoState: \"\",\r\n        voteState: \"\",\r\n        followState: \"\",\r\n        updateProfileState: \"\",\r\n        uploadState: \"\",\r\n\r\n        //Actions \r\n\r\n        // categories\r\n        updateActiveComicCategory: className => {\r\n            store.activeComicCategory = className;\r\n        },\r\n        updateActiveNovelCategory: className => {\r\n            store.activeNovelCategory = className\r\n        },\r\n        // Trends\r\n        updateActiveComicTrend: trend => {\r\n            store.activeComicTrend = trend;\r\n        },\r\n        updateActiveNovelTrend: trend => {\r\n            store.activeNovelTrend = trend;\r\n        },\r\n        updateCurrentPage: page => {\r\n            store.startPage = page;\r\n            store.currentPage = page;\r\n        },\r\n        scrollCurrentPage: page => {\r\n            store.currentPage = page;\r\n        },\r\n        // Removing duplicates from new content data\r\n        removeDuplicateContent: (newContent, trendyContent) => {\r\n            let trendyIds = trendyContent.map(content => content.seriesId);\r\n            let filteredContent = newContent.filter(content => !trendyIds.includes(content.seriesId));\r\n            return filteredContent;\r\n        },\r\n        // setSpinnerTimeout: (value) => {\r\n        //     store.spinnerTimeout = value;\r\n        // },\r\n        resetSeriesDetail: () => {\r\n            store.zoom = 50;\r\n            store.seriesDetail = [];\r\n            store.seriesLinks = [];\r\n            store.activeInfoTab = [];\r\n            // store.spinnerTimeout = [];\r\n            store.replyIsActive = \"\"\r\n        },\r\n        toggleInfoTab: (page) => {\r\n            store.activeInfoTab[page] = !store.activeInfoTab[page];\r\n            if (store.activeInfoTab[page] === false) {\r\n                store.activeInfoTab = store.activeInfoTab.map(info => info = false);\r\n                store.activeComments[page] = false;\r\n            }\r\n        },\r\n        closeInfoTab: () => {\r\n            store.activeInfoTab = store.activeInfoTab.map(info => (info = false));\r\n        },\r\n        toggleComments: (page) => {\r\n            store.activeComments[page] = !store.activeComments[page];\r\n        },\r\n        toggleZoomBanner: (value) => {\r\n            if (value === false && store.zoomIsActive === true) {\r\n                store.zoomIsActive = false;\r\n            } else if (value === undefined) {\r\n                store.zoomIsActive = !store.zoomIsActive;\r\n            }\r\n        },\r\n        toggleLogin: (value) => {\r\n            if (value === false && store.loginIsActive === true) {\r\n                store.loginIsActive = false;\r\n            } else if (value === undefined) {\r\n                store.loginIsActive = !store.loginIsActive;\r\n            }\r\n        },\r\n        toggleNav: (value) => {\r\n            store.navIsHidden = value;\r\n        },\r\n        toggleNavMenu: (value) => {\r\n            if (value === false && store.navMenuIsActive === true) {\r\n                store.navMenuIsActive = false;\r\n            } else if (value === undefined) {\r\n                store.navMenuIsActive = !store.navMenuIsActive;\r\n            }\r\n        },\r\n        toggleShareMenu: (value) => {\r\n            if (value === false && store.shareMenuIsActive === true) {\r\n                store.shareMenuIsActive = false;\r\n            } else if (value === undefined) {\r\n                store.shareMenuIsActive = !store.shareMenuIsActive;\r\n            }\r\n        },\r\n        toggleShareMenuBottom: (value) => {\r\n            if (value === false && store.shareMenuBottomIsActive === true) {\r\n                store.shareMenuBottomIsActive = false;\r\n            } else if (value === undefined) {\r\n                store.shareMenuBottomIsActive = !store.shareMenuBottomIsActive;\r\n            }\r\n        },\r\n        updateZoom: (increment) => {\r\n            if (store.zoom > 30 && store.zoom < 90) {\r\n                store.zoom = store.zoom + increment;\r\n            } else if (store.zoom === 30 && increment > 0) {\r\n                store.zoom = store.zoom + increment;\r\n            } else if (store.zoom === 90 && increment < 0) {\r\n                store.zoom = store.zoom + increment;\r\n            }\r\n        },\r\n        checkCookieConsent: () => {\r\n            const cookie = localStorage.getItem('cookie-consent');\r\n            store.cookieConsent = safeJSON.parse(cookie);\r\n        },\r\n        toggleReplyIsActive: (value) => {\r\n            if (store.replyIsActive === value) {\r\n                store.replyIsActive = \"\";\r\n            } else if (store.replyIsActive !== value) {\r\n                store.replyIsActive = value;\r\n            }\r\n        },\r\n        addTrendyComic: (res) => {\r\n            if (res && res.data) {\r\n                let comic = res.data;\r\n                if (store.trendingComics.length === 0 || !store.trendingComics.some(object => object.seriesId === comic.seriesId)) {\r\n                    store.trendingComics.push(comic);\r\n                    store.newComics = store.removeDuplicateContent(store.newComics, store.trendingComics);\r\n                }\r\n            } else if (res && res.bookmark) {\r\n                store.last_trendyComic = res.bookmark;\r\n            }\r\n        },\r\n        addNewComic: (res) => {\r\n            if (res && res.data) {\r\n                let comic = res.data;\r\n                if (store.newComics.length === 0 || !store.newComics.some(object => object.seriesId === comic.seriesId)) {\r\n                    if (store.trendingComics.length === 0 || !store.trendingComics.some(object => object.seriesId === comic.seriesId)) {\r\n                        store.newComics.push(comic);\r\n                    }\r\n                }\r\n            } else if (res && res.bookmark) {\r\n                store.last_newComic = res.bookmark;\r\n            }\r\n        },\r\n        addTrendyNovel: (res) => {\r\n            if (res && res.data) {\r\n                let novel = res.data;\r\n                if (store.trendingNovels.length === 0 || !store.trendingNovels.some(object => object.seriesId === novel.seriesId)) {\r\n                    store.trendingNovels.push(novel);\r\n                    store.newNovels = store.removeDuplicateContent(store.newNovels, store.trendingNovels);\r\n                }\r\n            } else if (res && res.bookmark) {\r\n                store.last_trendyNovel = res.bookmark;\r\n            }\r\n        },\r\n        addNewNovel: (res) => {\r\n            if (res && res.data) {\r\n                let novel = res.data;\r\n                if (store.newNovels.length === 0 || !store.newNovels.some(object => object.seriesId === novel.seriesId)) {\r\n                    if (store.trendingNovels.length === 0 || !store.trendingNovels.some(object => object.seriesId === novel.seriesId)) {\r\n                        store.newNovels.push(novel);\r\n                    }\r\n                }\r\n            } else if (res && res.bookmark) {\r\n                store.last_newNovel = res.bookmark;\r\n            }\r\n        },\r\n        /*       \r\n        General fetch\r\n        type: \"comics\" || \"novels\"\r\n        limit: number\r\n        */\r\n        fetchContent: async (type, limit) => {\r\n            try {\r\n                let skip;\r\n                if (type === \"comics\") {\r\n                    let allComics = [...store.trendingComics, ...store.newComics];\r\n                    skip = allComics.length;\r\n                } else if (type === \"novels\") {\r\n                    let allNovels = [...store.trendingNovels, ...store.newNovels];\r\n                    skip = allNovels.length;\r\n                }\r\n                let options = {\r\n                    method: 'POST',\r\n                    headers: new Headers({ 'content-type': 'application/json' }),\r\n                    body: safeJSON.stringify({ type: type, limit: limit, skip: skip })\r\n                };\r\n\r\n                let seriesInfo = await fetch(`${ENDPOINT}/fetchContent`, options)\r\n                    .then(res => res.json())\r\n\r\n                runInAction(() => {\r\n                    if (type === \"comics\") {\r\n                        store.newComics = [...store.newComics, ...seriesInfo.new];\r\n                        store.trendingComics = [...store.trendingComics, ...seriesInfo.trendy];\r\n                    } else if (type === \"novels\") {\r\n                        store.newNovels = [...store.newNovels, ...seriesInfo.new];\r\n                        store.trendingNovels = [...store.trendingNovels, ...seriesInfo.trendy];\r\n                    }\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        initHSLogin: async () => {\r\n            let link = await fetch(`${ENDPOINT}/getLoginURL`).then(res => res.text());\r\n\r\n            runInAction(() => {\r\n                store.loginLink = link;\r\n            })\r\n        },\r\n        login: (user) => {\r\n            let params = { username: user };\r\n\r\n            api.login(params, function (err, token) {\r\n                if (token) {\r\n                    console.log(token);\r\n                    store.toggleLogin(false);\r\n                    store.getUserDetail(token, user)\r\n                } else if (err) {\r\n                    console.log(err);\r\n                }\r\n            })\r\n        },\r\n        getUserDetail: async (localAccess, localUser) => {\r\n            store.userDetail = {};\r\n\r\n            if (localAccess && localUser) {\r\n                var access_token = localAccess;\r\n                var username = localUser;\r\n            } else {\r\n                access_token = new URLSearchParams(document.location.search).get('access_token');\r\n                username = new URLSearchParams(document.location.search).get('username');\r\n            }\r\n\r\n            if (access_token) {\r\n                store.toggleNavMenu(false);\r\n\r\n                let options = {\r\n                    method: 'POST',\r\n                    headers: new Headers({ 'content-type': 'application/json' }),\r\n                    body: safeJSON.stringify({ access_token: access_token })\r\n                }\r\n\r\n                //set access token in API and getting user after login\r\n                let userDetail = await fetch(`${ENDPOINT}/getUser`, options)\r\n                    .then(res => res.json())\r\n\r\n                runInAction(() => {\r\n                    store.userDetail = userDetail;\r\n\r\n                    if (access_token) {\r\n                        localStorage.setItem('access-token', safeJSON.stringify(access_token));\r\n                    }\r\n                    if (username) {\r\n                        localStorage.setItem('users', safeJSON.stringify(username));\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        logOut: () => {\r\n            fetch(`${ENDPOINT}/logout`)\r\n                .then(res => {\r\n                    if (res && res.status === 200) {\r\n                        store.userDetail = {};\r\n                        document.location.href = '/';\r\n                    }\r\n                    localStorage.setItem('access-token', \"\");\r\n                    localStorage.setItem('users', \"\");\r\n                    store.userDetail = {};\r\n                })\r\n                .catch(err => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                    }\r\n                })\r\n            return false;\r\n        },\r\n        follow: (follower, following) => {\r\n            runInAction(() => {\r\n                store.followState = \"pending\";\r\n            })\r\n\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ follower, following })\r\n            };\r\n\r\n            // fetch(`${ENDPOINT}/follow`, options)\r\n            //     .then(res => {\r\n            //         if (res && res.status === 200) {\r\n            //             if (store.seriesInfo) {\r\n            //                 store.seriesInfo.followers.push(follower);\r\n            //                 runInAction(() => {\r\n            //                     store.followState = \"done\";\r\n            //                 })\r\n            //             } else {\r\n            //                 console.log(\"failed to add follower - Please refresh.\")\r\n            //             }\r\n            //         }\r\n            //     })\r\n            //     .catch(err => {\r\n            //         console.log(err);\r\n            //         runInAction(() => {\r\n            //             store.followState = \"error\";\r\n            //         })\r\n            //     })\r\n            store.followState = \"done\";\r\n        },\r\n        unfollow: (unfollower, unfollowing) => {\r\n            store.followState = \"pending\";\r\n\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ unfollower, unfollowing })\r\n            };\r\n\r\n            // fetch(`${ENDPOINT}/unfollow`, options)\r\n            //     .then(res => {\r\n            //         if (res && res.status === 200) {\r\n            //             if (store.seriesInfo) {\r\n            //                 store.followState = \"done\";\r\n            //                 store.seriesInfo.followers = store.seriesInfo.followers.filter(follower => follower !== unfollower);\r\n            //             } else {\r\n            //                 console.log(\"failed to remove from followers - Please refresh.\")\r\n            //             }\r\n            //         }\r\n            //     })\r\n            //     .catch(err => {\r\n            //         console.log(err);\r\n            //         store.followState = \"error\";\r\n            //     })\r\n            store.followState = \"done\";\r\n            store.seriesInfo.followers = store.seriesInfo.followers.filter(follower => follower !== unfollower);\r\n        },\r\n        vote: (voter, author, permlink, weight, page) => new Promise (async (resolve) => {\r\n            store.voteState = \"pending\";\r\n\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ voter, author, permlink, weight })\r\n            };\r\n\r\n            // fetch(`${ENDPOINT}/vote`, options)\r\n            //     .then(res => {\r\n            //         if (res && res.status === 200) {\r\n            //             runInAction(() => {\r\n            //                 const votes = res.votes;\r\n            //                 const reward = res.reward;\r\n\r\n            //                 // function findPermlink(content) {\r\n            //                 //     if (content.permlink === permlink) {\r\n            //                 //         content.active_votes = votes;\r\n            //                 //         content.pending_payout_value = reward;\r\n            //                 //         store.voteState = \"done\";\r\n            //                 //         return content;\r\n            //                 //     } else {\r\n            //                 //         for (let reply of content.replies) {\r\n            //                 //             findPermlink(reply)\r\n            //                 //         }\r\n            //                 //     }\r\n            //                 // }\r\n\r\n            //                 // if (store.seriesDetail.length > page) {\r\n            //                 //     findPermlink(store.seriesDetail[page]);\r\n            //                 // }\r\n            //             })\r\n            //         }\r\n            //     })\r\n            //     .catch(err => {\r\n            //         store.voteState = \"error\";\r\n            //         console.log(err);\r\n            //     })\r\n            setTimeout(()=> {\r\n                store.voteState = \"done\";\r\n                resolve(\"done\");\r\n            },3000);\r\n        }),\r\n\r\n        //The comment() method is rate limited to 5 minutes per root comment (post), \r\n        //and 20 seconds per non-root comment (reply).\r\n        comment: async (params) => {\r\n            store.commentState = \"pending\";\r\n            \r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify(params)\r\n            };  \r\n\r\n            // let response = await fetch(`${ENDPOINT}/comment`, options)\r\n            //     .then(res => {\r\n            //         if (res && res.status === 200) {\r\n            //             store.commentState = \"done\";\r\n            //             return res.json();\r\n            //         }\r\n            //     })\r\n            //     .catch(err => {\r\n            //         store.commentState = \"error\";\r\n            //         console.log(err);\r\n            //         return err;\r\n            //     })\r\n\r\n            return {status:\"success\"};\r\n            // return response;\r\n        },\r\n        updateProfile: (account_name, metadata) => {\r\n            store.updateProfileState = \"pending\";\r\n\r\n            let params = {\r\n                account: account_name,\r\n                json_metadata: \"\",\r\n                posting_json_metadata: metadata,\r\n                extensions: []\r\n            };\r\n\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ params })\r\n            };\r\n\r\n            fetch(`${ENDPOINT}/updateProfile`, options)\r\n                .then(res => {\r\n                    if (res && res.status === 200) {\r\n                        store.updateProfileState = \"done\";\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    store.updateProfileState = \"error\";\r\n                    console.log(err);\r\n                })\r\n        },\r\n        getUserInfo: async (username) => {\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ username: username })\r\n            };\r\n\r\n            let info = await fetch(`${ENDPOINT}/getUserInfo`, options)\r\n                .then(res => res.json())\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n            \r\n            if (info && info.length > 0) {\r\n                store.userDetail = {...store.userDetail, ...info[0]}\r\n                return info;\r\n            } else {\r\n                return undefined;\r\n            }\r\n        },\r\n        fetchPermlinks: async (author, title) => {\r\n            store.seriesInfo = {};\r\n            store.seriesInfo.author = author;\r\n            store.seriesInfo.series_title = title;\r\n\r\n            store.seriesDetail = [];\r\n            store.seriesLength = 1;\r\n            store.seriesLinkState = \"pending\";\r\n            try {\r\n                let options = {\r\n                    method: 'POST',\r\n                    headers: new Headers({ 'content-type': 'application/json' }),\r\n                    body: safeJSON.stringify({ author, title })\r\n                };\r\n\r\n                let permlinks = await fetch(`${ENDPOINT}/fetchPermlinks`, options)\r\n                    .then(res => res.json())\r\n                    .catch(err => {\r\n                        store.updateProfileState = \"error\";\r\n                        console.log(err);\r\n                    })\r\n\r\n                runInAction(() => {\r\n                    store.seriesLinks = permlinks;\r\n                    store.seriesLinkState = \"done\";\r\n\r\n                    store.seriesDetail.length = store.seriesLinks.length;\r\n                    store.activeInfoTab = store.seriesLinks.map(object => object = false);\r\n                    store.activeComments = store.seriesLinks.map(object => object = false);\r\n                })\r\n                \r\n                return permlinks;\r\n            } catch (error) {\r\n                store.seriesLinkState = \"error\"\r\n                console.log(error)\r\n            }\r\n        },\r\n        fetchSeriesDetail: async (author, permlink, page) => {\r\n            store.seriesDetailState = \"pending\";\r\n            store.all_followers = [];\r\n            try {\r\n                let options = {\r\n                    method: 'POST',\r\n                    headers: new Headers({ 'content-type': 'application/json' }),\r\n                    body: safeJSON.stringify({ author, permlink })\r\n                };\r\n\r\n                let content = await fetch(`${ENDPOINT}/fetchSeriesDetail`, options)\r\n                    .then(res => res.json())\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n                \r\n                runInAction(async () => {\r\n                    if (store.seriesDetail && store.seriesDetail.length > page) {\r\n                        store.seriesDetail[page] = content;\r\n                        store.seriesDetail[page].replies = undefined;\r\n                    }\r\n                    const result = await store.fetchComments(content.author, content.permlink);\r\n                    if (store.seriesDetail && store.seriesDetail.length > 0 && store.seriesDetail[page]) {\r\n                        store.seriesDetail[page].replies = result;\r\n                        \r\n                        store.seriesDetailState = \"done\";\r\n                        if (store.seriesInfo) {\r\n                            const avatar = await store.fetchAvatar(author);\r\n                            const followers = await store.getFollowers(author);\r\n                            store.seriesInfo.followers = followers;\r\n                            store.seriesInfo.author_image = avatar\r\n                            store.all_followers = [];\r\n                        } else if (store.seriesInfo === undefined) {\r\n                            console.log(\"error - fetching followers failed\");\r\n                        }\r\n                    }\r\n                    if (store.seriesDetail && store.seriesDetail.length > 0 && page > 1 && store.seriesDetail[0] === undefined) {\r\n                        store.fetchSeriesDetail(author, store.seriesLinks[0], 0);\r\n                    }\r\n                });\r\n\r\n                return store.seriesDetail[page];\r\n\r\n            } catch (error) {\r\n                store.seriesDetailState = \"error\"\r\n                console.log(error)\r\n            }\r\n        },\r\n        fetchComments: async (author, permlink) => {\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ author, permlink })\r\n            };\r\n\r\n            return await fetch(`${ENDPOINT}/fetchComments`, options)\r\n                .then(res => res.json())\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        fetchAuthorSeries: async (author) => {\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ author })\r\n            };\r\n\r\n            let authorSeries = await fetch(`${ENDPOINT}/fetchAuthorSeries`, options)\r\n                .then(res => res.json())\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n\r\n            store.authorInfo.series = [...store.authorInfo.series, ...authorSeries];\r\n            store.authorInfo.series = [...new Set(store.authorInfo.series)];\r\n        },\r\n        async fetchSeriesInfo(seriesId) {\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ seriesId })\r\n            };\r\n\r\n            const seriesInfo = await fetch(`${ENDPOINT}/fetchSeries`, options)\r\n                .then(res => res.json());\r\n\r\n            return seriesInfo;\r\n        },\r\n        async fetchAuthorInfo(author) {\r\n            store.authorInfo = [];\r\n            store.authorInfo.series = [];\r\n            store.all_followers = [];\r\n            store.all_following = [];\r\n\r\n            store.authorInfoState = \"pending\";\r\n            try {\r\n                let options = {\r\n                    method: 'POST',\r\n                    headers: new Headers({ 'content-type': 'application/json' }),\r\n                    body: safeJSON.stringify({ author })\r\n                };\r\n\r\n                const info = await fetch(`${ENDPOINT}/fetchAuthorInfo`, options)\r\n                    .then(res => res.json())\r\n                    .catch(err => { console.log(err) })\r\n\r\n                if (info && info.length > 0) {\r\n                    store.authorInfo = info[0];\r\n                }\r\n\r\n                runInAction(async () => {\r\n                    const follow = await store.getFollowCount(author);\r\n                    if (store.authorInfo) {\r\n                        store.authorInfo.follow = follow;\r\n                        store.authorInfoState = \"done\";\r\n                        store.authorInfo.series = [];\r\n\r\n                        store.fetchAuthorSeries(author);\r\n                    }\r\n                    const followers = await store.getFollowers(author);\r\n                    const following = await store.getFollowing(author);\r\n                    if (store.authorInfo) {\r\n                        store.authorInfo.followers = followers;\r\n                        store.authorInfo.following = following;\r\n                    }\r\n                    store.all_following = [];\r\n                    store.all_followers = [];\r\n                })\r\n\r\n            } catch (error) {\r\n                store.authorInfoState = \"error\"\r\n                console.log(error)\r\n            }\r\n\r\n        },\r\n        getFollowCount: async (author) => {\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ author })\r\n            };\r\n\r\n            return await fetch(`${ENDPOINT}/fetchFollowCount`, options)\r\n                .then(res => res.json())\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        fetchAvatar: async (author) => {\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ author })\r\n            };\r\n\r\n            return await fetch(`${ENDPOINT}/fetchAvatar`, options)\r\n                .then(res => res.json())\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        getFollowers: async (author) => {\r\n            store.followState = \"pending\";\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ author })\r\n            };\r\n\r\n            let followers = await fetch(`${ENDPOINT}/fetchFollowers`, options)\r\n                .then(res => res.json())\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n\r\n            if (followers) {\r\n                store.followState = \"done\";\r\n                return followers;\r\n            } else {\r\n                return [];\r\n            }\r\n        },\r\n        getFollowing: async (author) => {\r\n            let options = {\r\n                method: 'POST',\r\n                headers: new Headers({ 'content-type': 'application/json' }),\r\n                body: safeJSON.stringify({ author })\r\n            };\r\n\r\n            return await fetch(`${ENDPOINT}/fetchFollowing`, options)\r\n                .then(res => res.json())\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }));\r\n    return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n};\r\n\r\nexport default StoreContext;\r\n","export const seriesIdGenerator = (author: string, title: string) => {\r\n    if (author && title) {\r\n        let authorId = author.replace(/[^A-Za-z0-9]/g, \"\");\r\n        let titleId = title.replace(/[^A-Za-z0-9]/g, \"\");\r\n    \r\n        let string = `${authorId}-${titleId}`;\r\n        let seriesId = string.toLowerCase().slice(0, 24);\r\n    \r\n        return seriesId as string;\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport const isContentRanked = (contentDate : string) => {\r\n    var g1 = new Date().toISOString().substring(0, 10);\r\n    var t1 = new Date().toISOString().substring(11, 19)\r\n    var g2 = contentDate.substring(0, 10);\r\n    var t2 = contentDate.substring(11, 19);\r\n    if (g1 >= g2) {\r\n        let g1Split = g1.split(\"-\");\r\n        let g2Split = g2.split(\"-\");\r\n        let g1Int = g1Split.map(string => parseInt(string));\r\n        let g2Int = g2Split.map(string => parseInt(string));\r\n        let g3 = [g1Int[0] - g2Int[0], g1Int[1] - g2Int[1], g1Int[2] - g2Int[2]];\r\n\r\n        if (g3[0] > 0 || g3[1] > 0 || g3[2] > 7) {\r\n            return false;\r\n        } else if (g3[2] === 7) {\r\n            if (t1 > t2) {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } else if (g3[0] === 0 && g3[1] === 0 && g3[2] < 7) {\r\n            return true;\r\n        }\r\n    } \r\n}\r\n\r\nexport const timeAgo = (contentDate : string) => {\r\n    var g1 = new Date().toISOString().substring(0, 10);\r\n    var g2 = contentDate;\r\n    if (g1 >= g2) {\r\n        let g1Split = g1.split(\"-\");\r\n        let g2Split = g2.split(\"-\");\r\n        let g1Int = g1Split.map(string => parseInt(string));\r\n        let g2Int = g2Split.map(string => parseInt(string));\r\n\r\n        let g3 = [g1Int[0] - g2Int[0], g1Int[1] - g2Int[1], g1Int[2] - g2Int[2]]\r\n        if (g3[0] > 0) {\r\n            return g3[0] === 1 ? `${g3[0]} year ago` : `${g3[0]} years ago`;\r\n        } else if (g3[1] > 0) {\r\n            return g3[1] === 1 ? `${g3[1]} month ago` : `${g3[1]} months ago`;\r\n        } else if (g3[2] > 0) {\r\n            return g3[2] === 1 ? `${g3[2]} day ago` : `${g3[2]} days ago`;\r\n        }\r\n    } \r\n}","import React, { useEffect } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nvar prevPage = 0;\r\ntype PageProps = {\r\n  episode: number,\r\n  page: number,\r\n  images: string[] | undefined,\r\n  config: any\r\n}\r\n\r\nconst Page = ({ episode, page, images, config }: PageProps) => {\r\n\r\n  useEffect(() => {\r\n    prevPage = page;\r\n  })\r\n\r\n  type RenderProps = {\r\n    data: string[] | undefined\r\n  }\r\n\r\n  const ImageRender = observer(({ data }: RenderProps) => {\r\n    if (data && data.length > 0) {\r\n      return (\r\n        <>\r\n          {\r\n            data.map((url, index) => {\r\n              if ((page === 0 && episode === 0) && config.mode !== \"vertical\") {\r\n                return <img key={url} className={`absolute h-screen w-auto ${page === index ? \"opacity-100\" : \"opacity-0\"} transition-opacity duration-700 ease-in-out`} src={url} alt=\"page\" />\r\n              } else if (config.mode === \"spread\") {\r\n                return (\r\n                  <div key={url} className=\"absolute w-screen h-screen top-0 flex flex-row justify-center items-center\">\r\n                    <img className={`max-w-1/2 w-auto max-h-full h-auto transition-opacity mx-2 ${page === index ? \"opacity-100\" : \"opacity-0\"} ${prevPage > page ? \"duration-75\" : \"duration-700\"} ease-in-out`} src={url} alt=\"page\" />\r\n                    {\r\n                      data[index + 1] ?\r\n                        <img className={`max-w-1/2 w-auto max-h-full h-auto transition-opacity mx-2 ${page + 1 === index + 1 ? \"opacity-100\" : \"opacity-0\"} ${prevPage < page ? \"duration-75\" : \"duration-700\"} ease-in-out`} src={data[index + 1]} alt=\"page\" />\r\n                        :\r\n                        <></>\r\n                    }\r\n                  </div>\r\n                )\r\n              } else if (config.mode === \"vertical\") {\r\n                return <img key={url} className={`max-w-full max-h-full h-auto opacity-100 mb-12`} src={url} alt=\"page\" />\r\n              } else {\r\n                return <img key={url} className={`absolute max-h-full h-auto w-auto ${page === index ? \"opacity-100\" : \"opacity-0\"} transition-opacity duration-700 ease-in-out`} src={url} alt=\"page\" />\r\n              }\r\n            })\r\n          }\r\n        </>\r\n      )\r\n    } else {\r\n      return <></>\r\n    }\r\n  })\r\n\r\n  return (\r\n    <ImageRender data={images} />\r\n  )\r\n}\r\n\r\nexport default Page;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport handleViewport from 'react-in-viewport';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst Pages = ({ config, episode, page, series, toggleRender, setPage, setEpisode }) => {\r\n    const pageRef = useRef(null)\r\n    var leavingPage = false;\r\n\r\n    useEffect(() => {\r\n        executeScroll();\r\n    },[episode, page, config.mode])\r\n\r\n    const executeScroll = () => {\r\n        let current: any = pageRef.current;\r\n        if (current) {\r\n            current.scrollIntoView()\r\n        }\r\n    }\r\n\r\n    const PageTrigger = handleViewport((props: { inViewport: boolean, forwardedRef: any, index: number, pageIndex: number, url: string }) => {\r\n        const { inViewport, forwardedRef, index, pageIndex, url } = props;\r\n\r\n        if (inViewport && leavingPage) {\r\n            setEpisode(index);\r\n            setPage(pageIndex);\r\n            leavingPage = false;\r\n        }\r\n        return (\r\n            <div ref={episode === index && page === pageIndex ? pageRef : null}>\r\n                <img ref={forwardedRef} key={url} className={`${index > episode + 1 ? \"hidden\" : \"block\"} max-w-full max-h-full h-auto mb-12`} src={url} alt=\"page\" />\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const EndTrigger = handleViewport((props: { inViewport: boolean, forwardedRef: any, index: number }) => {\r\n        const { inViewport, forwardedRef, index } = props;\r\n\r\n        if (inViewport) {\r\n            setEpisode(index);\r\n        }\r\n        return (\r\n            <h2 ref={forwardedRef} className={`${index < episode - 1 || index > episode + 1 ? \"hidden\" : \"block\"} ${config.background === \"white\" ? \"text-black\" : \"text-white\"} mb-12`}>End of episode {index + 1}</h2>\r\n        )\r\n    });\r\n\r\n\r\n    type RenderProps = {\r\n        toggleRender: boolean\r\n    }\r\n\r\n    const PageRenderer = observer(({ toggleRender }: RenderProps) => {\r\n        if (toggleRender && series && series.length > 0) {\r\n            let contentArray: any[] = [];\r\n            for (let i = 0; i < series.length; i++) {\r\n                let images = series[i]?.image;\r\n                let permlink = series[i]?.permlink\r\n\r\n                if (series[i]) {\r\n                    contentArray.push(\r\n                        <div key={permlink} className={`flex flex-col items-center`}>\r\n                            <h2 className={`${i > episode + 1 ? \"opacity-0\" : \"opacity-100\"} ${config.background === \"white\" ? \"text-black\" : \"text-white\"} mb-12`}>Start of episode {i + 1}</h2>\r\n                            {\r\n                                images ?\r\n                                    images.map((url: string, j: number) => {\r\n                                        return (\r\n                                            <PageTrigger key={url} url={url} index={i} pageIndex={j} onLeaveViewport={() => { leavingPage = true }} />\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <></>\r\n                            }\r\n                            <EndTrigger index={i} />\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            if (contentArray && contentArray.length > 0) {\r\n                return (\r\n                    <>\r\n                        {\r\n                            contentArray\r\n                        }\r\n                    </>\r\n                )\r\n            } else {\r\n                return <></>\r\n            }\r\n        } else {\r\n            return <></>\r\n        }\r\n    })\r\n\r\n\r\n    return (\r\n        <PageRenderer toggleRender={toggleRender} />\r\n    )\r\n}\r\n\r\nexport default Pages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface ArchiveProps {\r\n    props: {\r\n        actions: any,\r\n        go: any,\r\n        series: { image: string, permlink: string }[],\r\n        episode: number,\r\n        toggleRender: number\r\n    },\r\n    showMenu: boolean,\r\n    hideArchive: () => void,\r\n}\r\n\r\nconst Archive = ({ props, showMenu, hideArchive }: ArchiveProps) => {\r\n    let { actions, go, series, episode, toggleRender } = props;\r\n    let [archiveIndex, setArchiveIndex] = useState<number>(episode + 1);\r\n    let [indexLength, setIndexLength] = useState<number>(0);\r\n\r\n    const indexRef = React.useRef<any>(null);\r\n    const containerRef = React.useRef<any>(null);\r\n    const timeoutRef = React.useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        actions.fetchAll();\r\n        setTimeout(() => {\r\n            if (indexRef && indexRef.current && containerRef && containerRef.current) {\r\n                scrollToRef(indexRef, false);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (timeoutRef.current !== null) {\r\n            clearTimeout(timeoutRef.current);\r\n        }\r\n\r\n        timeoutRef.current = setTimeout(() => {\r\n            if (!showMenu) {\r\n                timeoutRef.current = null;\r\n                hideArchive();\r\n            }\r\n        }, 1200)\r\n\r\n    }, [showMenu])\r\n\r\n    type RenderProps = {\r\n        toggleRender: number,\r\n        archiveIndex: number\r\n    }\r\n\r\n    const PageRenderer = observer(({ toggleRender, archiveIndex }: RenderProps) => {\r\n        if (toggleRender && series && series.length > 0) {\r\n            let contentArray: any[] = [];\r\n            for (let i = 0; i < series.length; i++) {\r\n                if (series[i] && series[i].image && series[i].image.length > 0) {\r\n                    for (let j = 0; j < series[i].image.length; j++) {\r\n                        let index = contentArray.length;\r\n                        contentArray.push(\r\n                            <div ref={index === archiveIndex ? indexRef : null} key={series[i].permlink + j} className={`flex flex-col h-full w-3/12 mx-1 justify-between items-center cursor-pointer bg-cover`} onClick={() => archiveActions.set(i, j, index)}>\r\n                                <div className=\"h-full w-auto flex justify-center items-center overflow-hidden mt-0.5\">\r\n                                    <img className=\"w-full h-auto\" src={series[i].image[j]} />\r\n                                </div>\r\n                                <p className={`text-xs p-1 m-1 ${index === archiveIndex ? \"bg-purple-600 rounded text-white\" : \"\"}`}>E{i + 1}P{j + 1}</p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                } else {\r\n                    contentArray.push(\r\n                        <div key={i} className=\"flex flex-col h-full w-3/12 items-center\">\r\n                            <div className=\"w-3/12 h-full bg-white\" />\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n            if (contentArray && contentArray.length > 0) {\r\n                setIndexLength(contentArray.length)\r\n                return (\r\n                    <>\r\n                        {\r\n                            contentArray\r\n                        }\r\n                    </>\r\n                )\r\n            } else {\r\n                return <></>\r\n            }\r\n        } else {\r\n            return <></>\r\n        }\r\n    })\r\n\r\n    let scroll: number | null = 0;\r\n    const archiveActions = {\r\n        next: () => {\r\n            if (scroll === 0 || scroll !== containerRef.current.scrollLeft) {\r\n                containerRef.current.scrollTo({\r\n                    top: 0,\r\n                    left: containerRef.current.scrollLeft + 1000,\r\n                    behavior: 'smooth'\r\n                })\r\n                scroll = containerRef.current.scrollLeft;\r\n            }\r\n        },\r\n        previous: () => {\r\n            if (containerRef.current.scrollLeft > 0) {\r\n                containerRef.current.scrollTo({\r\n                    top: 0,\r\n                    left: containerRef.current.scrollLeft - 1000,\r\n                    behavior: 'smooth'\r\n                })\r\n                scroll = containerRef.current.scrollLeft;\r\n            }\r\n        },\r\n        first: () => {\r\n            archiveActions.set(0, 0, 0);\r\n        },\r\n        last: () => {\r\n            let lastEpisode = series.length - 1;\r\n            let lastPage = series[lastEpisode]?.image?.length ? series[lastEpisode]?.image?.length - 1 : 0;\r\n            let lastIndex = indexLength - 1;\r\n            archiveActions.set(lastEpisode, lastPage, lastIndex);\r\n        },\r\n        set: (episode: number, page: number, index: number) => {\r\n            go.to(episode, page);\r\n            setArchiveIndex(index);\r\n            setTimeout(() => {\r\n                scrollToRef(indexRef, true);\r\n            })\r\n        }\r\n    }\r\n\r\n    const scrollToRef = (ref: any, smooth: boolean) => {\r\n        containerRef.current.scrollTo({\r\n            top: 0,\r\n            left: ref.current.offsetLeft - (window.innerWidth / 2),\r\n            behavior: smooth ? 'smooth' : 'auto'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={`w-full h-full relative flex flex-row bg-purple-600 justify-between items-center p-0 lg:p-3 lg:px-10`}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-8 text-white absolute top-2 right-2 cursor-pointer\"\r\n                fill=\"none\" viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                onClick={hideArchive}\r\n            >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-14 text-white ml-1 cursor-pointer\"\r\n                fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" onClick={archiveActions.first}\r\n            >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\r\n            </svg>\r\n            {\r\n                indexLength > 26 ?\r\n                <svg\r\n                    className=\"w-14 cursor-pointer\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\" viewBox=\"0 0 24 24\"\r\n                    stroke={`white`}\r\n                    onClick={archiveActions.previous}\r\n                >\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                </svg>:\r\n                <></>\r\n            }\r\n            <div ref={containerRef} className=\"bg-white w-full h-full z-30 flex flex-row overflow-hidden mx-2\">\r\n                <PageRenderer toggleRender={toggleRender} archiveIndex={archiveIndex} />\r\n            </div>\r\n            {\r\n                indexLength > 26 ?\r\n                <svg\r\n                    className=\"w-14 cursor-pointer\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                    stroke={`white`}\r\n                    onClick={archiveActions.next}\r\n                >\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                </svg>:\r\n                <></>\r\n            }\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-14 mr-1 text-white cursor-pointer\" fill=\"none\"\r\n                viewBox=\"0 0 24 24\" stroke=\"currentColor\" onClick={archiveActions.last} >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Archive;","import { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport StoreContext from '../../../../../../../stores/appStore';\r\n\r\nconst SubscribeButton = observer(({ followers, username }: { followers: string[], username: any }) => {\r\n    const store = useContext(StoreContext) as any;\r\n\r\n    const handleFollow = () => {\r\n        //store.follow(store.userDetail.name, store.seriesInfo.author);\r\n    }\r\n\r\n    const handleUnfollow = () => {\r\n        //store.unfollow(store.userDetail.name, store.seriesInfo.author);\r\n    }\r\n  \r\n    if (store.seriesInfo.author === username) {\r\n        return (\r\n            <button className={`font-semibold border-2 border-gray-500 rounded p-2 m-2 uppercase text-gray-500 bg-transparent cursor-not-allowed`} >\r\n                <span className=\"flex flex-row justify-center items-center\">\r\n                    <p>Edit content</p>\r\n                </span>\r\n            </button>\r\n        )\r\n    } else if (followers) {\r\n        if (followers.includes(username)) {\r\n            return (\r\n                <button className={`hover:bg-gray-500 font-semibold hover:text-white border-2 border-gray-500 hover:border-transparent rounded p-2 m-2 uppercase text-white bg-gray-500`} onClick={handleFollow}>\r\n                    <span className=\"flex flex-row justify-center items-center cursor-pointer hover:text-white\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-10 z-10 stroke-current text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\r\n                        </svg>\r\n                        <p>Subscribed</p>\r\n                    </span>\r\n                </button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button className={`hover:bg-gray-500 font-semibold hover:text-white border-2 border-gray-500 hover:border-transparent rounded p-2 m-2 uppercase text-gray-500 bg-transparent`} onClick={handleUnfollow}>\r\n                    <span className=\"flex flex-row justify-center items-center cursor-pointer hover:text-white\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-10 z-10 stroke-current text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\r\n                        </svg>\r\n                        <p>Subscribe</p>\r\n                    </span>\r\n                </button>\r\n            )\r\n        }\r\n    } else {\r\n        return (\r\n            <button className={`hover:bg-gray-500 font-semibold hover:text-white border-2 border-gray-500 hover:border-transparent rounded p-2 m-2 uppercase text-gray-500 bg-transparent`} >\r\n                <span className=\"flex flex-row justify-center items-center cursor-pointer hover:text-white\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-10 z-10 stroke-current text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\r\n                    </svg>\r\n                    <p>Loading</p>\r\n                </span>\r\n            </button>\r\n        )\r\n    }\r\n})\r\n\r\nexport default SubscribeButton;","import { useContext } from \"react\";\r\nimport SubscribeButton from \"./buttons/subscribeButton\";\r\nimport StoreContext from '../../../../../../stores/appStore';\r\nimport { toJS } from 'mobx';\r\n\r\ninterface InteractProps {\r\n    seriesInfo: {\r\n        followers: string[]\r\n    },\r\n    toggleComments: () => void,\r\n    toggleSharing: () => void\r\n}\r\n\r\nconst InteractSection = ({seriesInfo, toggleComments, toggleSharing}: InteractProps) => {\r\n    const store = useContext(StoreContext) as any;\r\n\r\n    return (\r\n        <div className=\"flex flex-row flex-1 justify-around items-center text-gray-500 z-10 uppercase\">\r\n            <span className=\"flex flex-col justify-center items-center m-2 cursor-pointer hover:text-white group\" onClick={toggleComments}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-10 z-10 stroke-current text-gray-400 group-hover:text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" />\r\n                </svg>\r\n                <p className=\"group-hover:text-white\">Comment</p>\r\n            </span>\r\n            <span className=\" relative flex flex-col justify-center items-center m-2 cursor-pointer hover:text-white group\" onClick={toggleSharing}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-10 z-10 stroke-current text-gray-400 group-hover:text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\" />\r\n                </svg>\r\n                <p className=\"group-hover:text-white\">Share</p>\r\n            </span>\r\n            <SubscribeButton followers={seriesInfo.followers} username={toJS(store.userDetail) ? store.userDetail.name : \"\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InteractSection;","interface SettingsProps {\r\n    props: {\r\n        actions: any,\r\n        config: any,\r\n    },\r\n    showArchive: () => void\r\n}\r\n\r\nconst SettingsSection = ({ props, showArchive }: SettingsProps) => {\r\n    let { actions, config } = props;\r\n\r\n    return (\r\n        <div className=\"flex flex-row flex-1 justify-around items-center text-gray-500 uppercase\">\r\n            <span className=\"flex-col justify-center items-center m-2 cursor-pointer hidden sm:flex group z-10\" onClick={actions.toggleBgColor}>\r\n                <svg className=\"w-10 z-10 stroke-current text-gray-400 group-hover:text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\r\n                </svg>\r\n                <p className=\"group-hover:text-white\">Color</p>\r\n            </span>\r\n            <div className=\"vertical-divider hidden sm:block\" />\r\n            <span className=\"flex flex-col justify-center items-center m-2 cursor-pointer group z-10\" onClick={() => actions.toggleMode(\"page\")}>\r\n                <svg className={`group-hover:text-white w-10 z-10 stroke-current ${config.mode === \"page\" ? \"text-white\" : \"text-gray-400\"}`} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                </svg>\r\n                <p className={`group-hover:text-white ${config.mode === \"page\" ? \"text-white\" : \"text-gray-400\"}`}>Page</p>\r\n            </span>\r\n            <span className=\"flex flex-col justify-center items-center m-2 cursor-pointer group z-10\" onClick={() => actions.toggleMode(\"spread\")}>\r\n                <svg className={`group-hover:text-white w-10 z-10 stroke-current ${config.mode === \"spread\" ? \"text-white\" : \"text-gray-400\"}`} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\r\n                </svg>\r\n                <p className={`group-hover:text-white ${config.mode === \"spread\" ? \"text-white\" : \"text-gray-400\"}`}>Spread</p>\r\n            </span>\r\n            <span className=\"flex flex-col justify-center items-center m-2 cursor-pointer group z-10\" onClick={() => actions.toggleMode(\"vertical\")}>\r\n                <svg className={`group-hover:text-white w-10 z-10 stroke-current ${config.mode === \"vertical\" ? \"text-white\" : \"text-gray-400\"}`} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n                </svg>\r\n                <p className={`group-hover:text-white ${config.mode === \"vertical\" ? \"text-white\" : \"text-gray-400\"}`}>Vertical</p>\r\n            </span>\r\n            <div className=\"vertical-divider hidden sm:block\" />\r\n            <span className=\"flex flex-col justify-center items-center m-2 cursor-pointer group z-10\" onClick={showArchive}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"group-hover:text-white w-10 z-10 stroke-current text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\r\n                </svg>\r\n                <p className=\"group-hover:text-white\">Archives</p>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingsSection;","import React, { useState } from 'react';\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    WhatsappShareButton,\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    PinterestIcon,\r\n    RedditIcon,\r\n    TelegramIcon,\r\n    TumblrIcon,\r\n    TwitterIcon,\r\n    WhatsappIcon\r\n} from \"react-share\";\r\n\r\nconst Share = ({ image, toggleSharing }: { image: string, toggleSharing: any }) => {\r\n    return (\r\n        <div className=\"absolute bottom-0 h-60 md:h-52 lg:h-44 xl:h-32 flex flex-wrap w-full justify-end pr-28 space-x-2 z-20 bg-white\">\r\n            <EmailShareButton url={window.location.href} subject={\"Check this out.\"} body={\"Here is a great story I found on Inkito.io\"}>\r\n                <EmailIcon size={44} round={true} />\r\n            </EmailShareButton>\r\n\r\n            <FacebookShareButton url={window.location.href} quote={\"Check this out.\"} hashtag={\"#inkito\"}>\r\n                <FacebookIcon size={44} round={true} />\r\n            </FacebookShareButton>\r\n\r\n            <TwitterShareButton url={window.location.href} title={\"Check this out.\"} hashtags={[\"inkito\"]} via={\"inkito_io\"}>\r\n                <TwitterIcon size={44} round={true} />\r\n            </TwitterShareButton>\r\n\r\n            <TumblrShareButton url={window.location.href} title={\"Check this out.\"} tags={[\"inkito\"]} caption={\"Here is a great story I found on Inkito.io\"}>\r\n                <TumblrIcon size={44} round={true} />\r\n            </TumblrShareButton>\r\n\r\n            <PinterestShareButton url={window.location.href} media={image} description={\"Here is a great story I found on Inkito.io\"}>\r\n                <PinterestIcon size={44} round={true} />\r\n            </PinterestShareButton>\r\n\r\n            <TelegramShareButton url={window.location.href} title={\"Check this out.\"}>\r\n                <TelegramIcon size={44} round={true} />\r\n            </TelegramShareButton>\r\n\r\n            <RedditShareButton url={window.location.href} title={\"Check this out.\"}>\r\n                <RedditIcon size={44} round={true} />\r\n            </RedditShareButton>\r\n\r\n            <WhatsappShareButton url={window.location.href} title={\"Check this out.\"}>\r\n                <WhatsappIcon size={44} round={true} />\r\n            </WhatsappShareButton>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-10 text-black absolute top-4 right-4 cursor-pointer\"\r\n                fill=\"none\" viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                onClick={toggleSharing}\r\n            >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Share;","import { useContext, useEffect, useState } from 'react';\r\nimport { autorun } from \"mobx\";\r\nimport StoreContext from '../../../../../../stores/appStore';\r\n\r\ninterface VotingProps {\r\n    props: {\r\n        actions: {\r\n            vote:() => void,\r\n            toggleAutoVote: () => void\r\n        },\r\n        current: {\r\n            active_votes: string[]\r\n        },\r\n        seriesInfo: {\r\n            ranked: any[],\r\n            voted: number\r\n        },\r\n        userData: any\r\n    }\r\n}\r\n\r\nconst VotingSection = ({ props }: VotingProps) => {\r\n    let { actions, current, seriesInfo, userData } = props;\r\n    let [voteIsPending, setVotePending] = useState<boolean>(false);\r\n    const store = useContext(StoreContext) as any;\r\n\r\n    useEffect(() => autorun(() => {\r\n        if (store.voteState === \"pending\") {\r\n            setVotePending(true);\r\n        } else {\r\n            setVotePending(false);\r\n        }\r\n    }), [store.voteState]);\r\n\r\n    const RankBullets = ({ number, voted }) => {\r\n        let bullets: any[] = [];\r\n        for (let i: number = 0; i < number; i++) {\r\n            if (i < voted) {\r\n                bullets.push(\r\n                    <div key={i} className=\"border border-gray-500 bg-purple-500 border-1 w-1.5 h-1.5 m-0.5\" />\r\n                )\r\n            } else {\r\n                bullets.push(\r\n                    <div key={i} className=\"border border-gray-500 border-1 w-1.5 h-1.5 m-0.5\" />\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {bullets}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col flex-auto text-gray-500 z-10 uppercase order-first w-screen lg:order-none lg:flex-1 lg:w-auto justify-around items-center m-2 z-10 cursor-default\">\r\n            <div className=\"flex flex-row w-full justify-around items-center\">\r\n\r\n                <div className=\"flex-1 flex-col\">\r\n                    <p className=\"text-center text-sm cursor-default\">\r\n                        {\r\n                            current && current.active_votes && current.active_votes.length >= 0 ?\r\n                                current.active_votes.length === 1 ?\r\n                                    `${current.active_votes.length} vote` :\r\n                                    `${current.active_votes.length} votes` :\r\n                                \"loading...\"\r\n                        }\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"vertical-divider\" />\r\n\r\n                {\r\n                    seriesInfo.ranked && seriesInfo.ranked.length > 0 ?\r\n                        <div className=\"flex flex-wrap w-5 justify-center\">\r\n                            <RankBullets number={seriesInfo.ranked.length} voted={seriesInfo.voted} />\r\n                            <p className=\"text-xs\">{`${seriesInfo.voted}/${seriesInfo.ranked.length}`}</p>\r\n                        </div>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                <div className=\"flex flex-initial flex-row flex-row justify-center items-center\">\r\n                    {\r\n                        seriesInfo.ranked && seriesInfo.ranked.length === 0 ?\r\n                            <button className={`flex-1 z-20 text-gray-400 my-2 mx-2 py-1 px-6 rounded bg-gray-600 focus:outline-none cursor-default`} >\r\n                                <p>\r\n                                    VOTE\r\n                                </p>\r\n                            </button>\r\n                            :\r\n                            <>\r\n                                {\r\n                                    voteIsPending ?\r\n                                        <button className={`w-24 h-10 flex-1 flex flex-row justify-center items-center z-20 text-gray-300 my-2 mx-2 rounded bg-purple-700 focus:outline-none cursor-default`}>\r\n                                            <div className=\"loader ease-linear rounded-full border-2 border-t-2 border-gray-200 h-6 w-6\"></div>\r\n                                        </button>\r\n                                        :\r\n                                        <button className={`w-24 h-10 flex-1 z-20 text-gray-300 my-2 mx-2 rounded \r\n                                            bg-purple-600 focus:outline-none hover:bg-purple-700 hover:shadow-lg`} \r\n                                            onClick={actions.vote}\r\n                                        >\r\n                                            <p>\r\n                                                VOTE\r\n                                            </p>\r\n                                        </button>\r\n                                }\r\n                            </>\r\n                    }\r\n                    {/* <button className={`flex-initial bg-transparent hover:bg-gray-500 font-semibold hover:text-white border-2 \r\n                        border-gray-500 hover:border-transparent rounded p-1 m-1 ${userData.autoVoteOn ? \"bg-gray-500 text-white\" : \"text-gray-500\"}`} \r\n                        onClick={actions.toggleAutoVote}\r\n                    >\r\n                    <p className=\"uppercase text-xs\">\r\n                        Auto\r\n                    </p>\r\n                </button> */}\r\n                </div>\r\n                <div className=\"vertical-divider\" />\r\n\r\n                <div className=\"flex flex-row flex-1 justify-center items-center text-sm text-center\">\r\n                    <div className=\"flex flex-col\">\r\n                        <p className=\"cursor-default\">\r\n                            Voting\r\n                        </p>\r\n                        <p className=\"cursor-default\">\r\n                            power:\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex flex-col items-center p-2 mx-2\">\r\n                        <div className=\"h-0.5 w-3 bg-white\"></div>\r\n                        <div className=\"h-6 w-4 border boder-2 boder-white rounded flex flex-col-reverse relative\">\r\n                            {\r\n                                Math.round(userData.voting_power / 100) < 25 ?\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-3.5 text-white absolute top-0.5 left-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                                    </svg>\r\n                                    :\r\n                                    <></>\r\n                            }\r\n                            <div className=\"bg-purple-500\" style={{ height: `${Math.round(userData.voting_power / 100)}%` }} />\r\n\r\n                        </div>\r\n                        <p className=\"text-xs\">{Math.round(userData.voting_power / 100)}%</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VotingSection;","import Archive from \"./archive\";\r\nimport InteractSection from \"./sections/interactSection/interactSection\";\r\nimport SettingsSection from './sections/settingsSection/settingsSection';\r\nimport Share from './share';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport VotingSection from './sections/votingSection/votingSection';\r\n\r\nconst Bottom = ({ props, showMenu, setShowMenu, toggleComments }: any) => {\r\n    let { seriesInfo } = props;\r\n\r\n    let [showArchive, setShowArchive] = useState<boolean>(false);\r\n    let [isSharing, setIsSharing] = useState<boolean>(false);\r\n\r\n    const timeoutRef = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (timeoutRef.current !== null) {\r\n            clearTimeout(timeoutRef.current);\r\n        }\r\n\r\n        timeoutRef.current = setTimeout(() => {\r\n            if (!showMenu) {\r\n                timeoutRef.current = null;\r\n                setIsSharing(false);\r\n            }\r\n        }, 1200)\r\n\r\n    }, [showMenu])\r\n\r\n\r\n\r\n\r\n    const toggleSharing = () => {\r\n        setIsSharing(!isSharing);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`absolute w-full bottom-0 z-20 select-none h-60 md:h-52 lg:h-44 xl:h-32 transition duration-500 ease-in-out text-gray-500 uppercase\r\n            ${showMenu ? \"opacity-100\" : \"opacity-0 delay-1000\"}`}\r\n                onMouseOver={() => setShowMenu(true)}\r\n                onMouseLeave={() => { setShowMenu(false) }}\r\n            >\r\n                {\r\n                    isSharing ?\r\n                        <Share image={\"https://steemitimages.com/DQmS1EUee1rJFL2EHr3yJVKChJBtkccf2dGDJsAAAn1qBE2/jrej_00.png\"} toggleSharing={toggleSharing} /> :\r\n                        <></>\r\n                }\r\n                {\r\n                    showArchive ?\r\n                        <Archive props={props} showMenu={showMenu} hideArchive={() => setShowArchive(false)} />\r\n                        :\r\n                        <div className=\"w-full h-full flex flex-row flex-wrap justify-around items-center p-0 lg:p-3\">\r\n                            <SettingsSection props={props} showArchive={() => setShowArchive(true)} />\r\n\r\n                            <div className=\"vertical-divider hidden lg:block\" />\r\n\r\n                            <VotingSection props={props} />\r\n\r\n                            <div className=\"vertical-divider hidden lg:block\" />\r\n\r\n                            <InteractSection seriesInfo={seriesInfo} toggleComments={toggleComments} toggleSharing={toggleSharing} />\r\n                            <div className={`absolute w-full h-full bg-black opacity-80`} />\r\n                        </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Bottom;","import { useContext, useState } from \"react\";\r\nimport Editor from \"rich-markdown-editor\";\r\nimport { safeJSON } from \"../../middlewares/json\";\r\nimport StoreContext from '../../stores/appStore';\r\n\r\nconst EditCommentBlock = ({ commentBody, cancelAction, updateCb, parent }) => {\r\n    const [editorState, setEditorState] = useState<any>(\"\");\r\n    let [isLoading, setIsLoading] = useState<any>(false);\r\n\r\n    const store = useContext(StoreContext) as any;\r\n\r\n    const sendAction = async (editorState: string) => {\r\n        if (editorState) {    \r\n            let author = store.userDetail.name;\r\n            let body = editorState;\r\n            let parentAuthor = parent.author;\r\n            let parentPermlink = parent.permlink;\r\n            let tags = safeJSON.parse(parent.json_metadata).tags;\r\n            let jsonMetadata = safeJSON.stringify({ tags, app: 'Inkito' });\r\n            let permlink = \"re-\" + parent.permlink + \"-\" + Date.now();\r\n            let title = \"\";\r\n    \r\n            let payload: any = { parentAuthor, parentPermlink, author, permlink, title, body, jsonMetadata }\r\n    \r\n            setIsLoading(true);\r\n            let response = await store.comment(payload);\r\n            \r\n            if (response) {\r\n                setIsLoading(false);\r\n                if (response.status === \"success\") {\r\n                    cancelAction();\r\n                    payload.json_metadata = payload.jsonMetadata;\r\n                    payload.pending_payout_value = \"0.000 HBD\";\r\n                    payload.total_payout_value = \"0.000 HBD\";\r\n                    payload.created = new Date().toISOString();\r\n                    payload.active_votes = [];\r\n                    payload.replies = [];\r\n                    \r\n                    let updateSelf : boolean;\r\n                    if (commentBody) {\r\n                        updateSelf = true;\r\n                        updateCb(payload, updateSelf);\r\n                    } else {\r\n                        updateSelf = false;\r\n                        updateCb(payload, updateSelf);\r\n                    }\r\n                } else {\r\n                    console.log(\"Something went wrong.\")\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full h-auto mt-6\">\r\n            <div className=\"border border-2 border-indigo-300 px-7 py-2\">\r\n                <Editor\r\n                    defaultValue={commentBody}\r\n                    placeholder=\"Write something nice...\"\r\n                    onChange={(e) => { setEditorState(e()) }}\r\n                />\r\n            </div>\r\n            <div className=\"flex flex-row justify-end my-4\">\r\n                <button className=\"bg-transparent hover:bg-indigo-400 text-indigo-500 font-semibold \r\n                                        hover:text-white px-2 border border-indigo-400 hover:border-transparent rounded mr-4\"\r\n                    onClick={cancelAction}\r\n                >\r\n                    Cancel\r\n                </button>\r\n                {   \r\n                    !isLoading ?\r\n                    <button className={`                  \r\n                    text-white px-4 rounded bg-indigo-500 border border-indigo-500 \r\n                    ${editorState ? \"hover:bg-indigo-500 hover:shadow-lg focus:outline-none\" : \"opacity-50 cursor-not-allowed\"}`}\r\n                        onClick={() => sendAction(editorState)}\r\n                    >\r\n                        Send\r\n                    </button>\r\n                    :\r\n                    <p className=\"text-purple-600\">Sending...</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCommentBlock;","import CommentList from \"./commentList\";\r\nimport EditCommentBlock from \"./editCommentBlock\";\r\nimport { imgify } from \"../../middlewares/imgify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Remarkable } from \"remarkable\";\r\nimport StoreContext from '../../stores/appStore';\r\nimport { timeAgo } from \"../../middlewares/format\";\r\nimport { useContext, useState } from \"react\";\r\nimport { toJS } from \"mobx\";\r\n\r\ninterface CommentBlockProps {\r\n    comment: {\r\n        active_votes: { voter: string }[],\r\n        author: string,\r\n        body: string\r\n        created: string,\r\n        pending_payout_value: string,\r\n        permlink: string,\r\n        profile_image: string,\r\n        replies: any[],\r\n        total_payout_value: string\r\n    }\r\n}\r\n\r\nconst CommentBlock = ({ comment }: CommentBlockProps) => {\r\n    let payout = comment.pending_payout_value === \"0.000 HBD\" ? comment.total_payout_value : comment.pending_payout_value;\r\n    let reward = payout.replace(\"HBD\", \"\");\r\n    const store = useContext(StoreContext) as any;\r\n    let [activeComment, setActiveComment] = useState<string>(\"\");\r\n    let [editComment, setEditComment] = useState<boolean>(false);\r\n    let [votedComment, setVotedComment] = useState<string>(\"\");\r\n\r\n    const md = new Remarkable({ html: true }).use(imgify);\r\n\r\n    const toggleActiveComment = (permlink: string) => {\r\n        if (activeComment === permlink) {\r\n            setActiveComment(\"\");\r\n        } else {\r\n            setActiveComment(permlink);\r\n        }\r\n    }\r\n\r\n    const toggleEditComment = () => {\r\n        setEditComment(!editComment);\r\n    }\r\n\r\n    interface UpdateProps {\r\n        parentAuthor: string,\r\n        parentPermlink: string,\r\n        author: string,\r\n        permlink: string,\r\n        title: string,\r\n        body: string,\r\n        jsonMetadata: string,\r\n        pending_payout_value: string,\r\n        total_payout_value: string,\r\n        created: string,\r\n        active_votes: []\r\n    }\r\n\r\n    const updateComment = (payload: UpdateProps, updateSelf: boolean) => {\r\n        if (updateSelf) {\r\n            if (comment && comment.body) {\r\n                comment.body = payload.body;\r\n            }\r\n        } else {\r\n            if (comment && comment.replies) {\r\n                comment.replies.push(payload);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleVote = async (author: string, permlink: string) => {\r\n        setVotedComment(permlink);\r\n        let weight = 10000;\r\n        let voter = store.userDetail.name;\r\n        \r\n        let response = await store.vote(voter, author, permlink, weight, undefined);\r\n        if (response === \"done\") {\r\n            if (comment && comment.active_votes) {\r\n                let payload = {\r\n                    voter: voter\r\n                }\r\n                comment.active_votes.push(payload);\r\n            }\r\n            setVotedComment(\"\");\r\n        }\r\n    }\r\n\r\n    const CommentBody = observer(({ comment }: CommentBlockProps) => {\r\n        return (\r\n            <div className=\"border border-4 p-4 my-2\">\r\n                <div dangerouslySetInnerHTML={{ __html: md.render(comment.body) }} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <li className=\"w-full flex flex-row\">\r\n            <Link to={`/@${comment.author}`}>\r\n                <img className=\"h-16 rounded-full mt-9 mr-4\" src={`https://images.hive.blog/u/${comment.author}/avatar` || comment.profile_image} alt={`${comment.author}-avatar`} />\r\n            </Link>\r\n            <div className=\"flex flex-1 flex-col mx-2 my-6\">\r\n                <div className=\"flex flex-row justify-start mx-2\">\r\n                    <p className=\"capitalize mr-4\">\r\n                        <Link to={`/@${comment.author}`}>\r\n                            {comment.author}\r\n                        </Link>\r\n                    </p>\r\n                    <p className=\"mr-4\">{timeAgo(comment.created.slice(0, 10))}</p>\r\n                    {\r\n                        comment.author === store.userDetail.name && !editComment ?\r\n                            <button className=\"bg-transparent hover:bg-gray-400 text-gray-500 font-semibold \r\n                            hover:text-white px-2 border border-gray-300 hover:border-transparent rounded\"\r\n                                onClick={toggleEditComment}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                            :\r\n                            <></>\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    !editComment ?\r\n                        <>\r\n                            <CommentBody comment={comment} />\r\n                            <div className=\"flex flex-row justify-between mx-2 my-1\">\r\n                                <div className=\"flex flex-row justify-start\">\r\n                                    <div className=\"flex justify-center w-12 mr-4\">\r\n                                        {\r\n                                            comment.active_votes && comment.active_votes.some(vote => vote.voter === store.userDetail.name) ?\r\n                                                <button className=\"text-white px-2 rounded bg-purple-600 border border-purple-600 \r\n                                                    focus:outline-none hover:bg-purple-700 hover:shadow-lg\"\r\n                                                >   \r\n                                                    Voted\r\n                                                </button>\r\n                                                :\r\n                                                //Should check if voted here.\r\n                                                votedComment === \"\" ?\r\n                                                    <button className=\"bg-transparent hover:bg-purple-600 text-purple-700 font-semibold \r\n                                                    hover:text-white px-2 border border-purple-500 hover:border-transparent rounded\"\r\n                                                        onClick={() => { handleVote(comment.author, comment.permlink) }}\r\n                                                    >\r\n                                                        Vote\r\n                                                    </button>\r\n                                                    :\r\n                                                    <div className=\"loader ease-linear rounded-full border-2 border-t-2 border-gray-200 h-6 w-6\"></div>\r\n\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"mr-4\">\r\n                                        <p>{reward} HBD</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"vote-block flex reset mr-4\">\r\n                                        <p>{comment.active_votes.length} votes</p>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    activeComment !== comment.permlink ?\r\n                                        <button className=\"bg-transparent hover:bg-indigo-500 text-indigo-600 font-semibold \r\n                                        hover:text-white px-2 border border-indigo-500 hover:border-transparent rounded\"\r\n                                            onClick={() => toggleActiveComment(comment.permlink)}\r\n                                        >\r\n                                            Reply\r\n                                        </button>\r\n                                        :\r\n                                        <></>\r\n                                }\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <EditCommentBlock commentBody={comment.body} cancelAction={toggleEditComment} parent={comment} updateCb={updateComment} />\r\n                }\r\n\r\n                {\r\n                    activeComment === comment.permlink ?\r\n                        <EditCommentBlock commentBody={\"\"} cancelAction={() => toggleActiveComment(comment.permlink)} parent={comment} updateCb={updateComment} />\r\n                        :\r\n                        <></>\r\n                }\r\n                {\r\n                    comment.replies ?\r\n                        <CommentList replies={comment.replies} />\r\n                        :\r\n                        <></>\r\n                }\r\n            </div>\r\n        </li >\r\n    )\r\n}\r\n\r\nexport default CommentBlock;","import CommentBlock from \"./commentBlock\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface repliesInterface {\r\n    active_votes: [],\r\n    author: string,\r\n    body: string\r\n    created: string,\r\n    pending_payout_value: string,\r\n    permlink: string,\r\n    profile_image: string,\r\n    replies: any[],\r\n    total_payout_value: string\r\n}\r\n\r\nconst CommentList = ({ replies }: { replies: repliesInterface[] }) => {\r\n\r\n    const List = observer(({ replies }: any) => {\r\n        let comments: any[] = [];\r\n\r\n        if (replies && replies.length > 0) {\r\n            replies.forEach((comment: repliesInterface) => {\r\n                comments.push(<CommentBlock key={comment.permlink} comment={comment} />)\r\n            })\r\n        }\r\n\r\n        return (\r\n            <ul className=\"w-full flex flex-col items-end\">\r\n                {comments}\r\n            </ul>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <List replies={replies} />\r\n    )\r\n}\r\n\r\nexport default CommentList;","import CommentList from \"./commentList\";\r\nimport EditCommentBlock from \"./editCommentBlock\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface CommentsProps {\r\n    current: any\r\n}\r\n\r\nconst Comments = ({ current }: CommentsProps) => {\r\n    let [editComment, setEditComment] = useState<boolean>(false);\r\n    let [isLoading, setIsLoading] = useState<boolean>(false);\r\n    let [hasComment, setHasComment] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (current && current.replies === undefined) {\r\n            setIsLoading(true);\r\n        } else {\r\n            setIsLoading(false);\r\n            if (current.replies.length > 0) {\r\n                setHasComment(true);\r\n            } else if (current.replies && current.replies.length === 0) {\r\n                setHasComment(false);\r\n            }\r\n        }\r\n    }, [current.replies])\r\n\r\n    const toggleEditComment = () => {\r\n        setEditComment(!editComment);\r\n    }\r\n\r\n    interface UpdateProps {\r\n        parentAuthor: string,\r\n        parentPermlink: string,\r\n        author: string,\r\n        permlink: string,\r\n        title: string,\r\n        body: string,\r\n        jsonMetadata: string,\r\n        pending_payout_value: string,\r\n        total_payout_value: string,\r\n        created: string,\r\n        active_votes: []\r\n    }\r\n\r\n    const updateComment = (payload: UpdateProps, updateSelf: boolean) => {\r\n        if (updateSelf) {\r\n            if (current && current.body) {\r\n                current.body = payload.body;\r\n            }\r\n        } else {\r\n            if (current && current.replies) {\r\n                current.replies.push(payload);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (current) {\r\n        return (\r\n            <>\r\n                <div className=\"flex flex-row justify-start font-bold mt-2\">\r\n                    <h2>\r\n                        Comments\r\n                    </h2>\r\n                </div>\r\n                <div className=\"horizontal-divider my-4\" />\r\n                <div className=\"flex flex-row justify-end mr-10\">\r\n                    {\r\n                        !editComment ?\r\n                            <button className=\"bg-transparent hover:bg-indigo-500 text-indigo-600 font-semibold \r\n                            hover:text-white px-2 border border-indigo-500 hover:border-transparent rounded\"\r\n                                onClick={toggleEditComment}\r\n                            >\r\n                                Reply\r\n                            </button>\r\n                            :\r\n                            <></>\r\n                    }\r\n                </div>\r\n                {\r\n                    editComment ?\r\n                        <div className=\"flex justify-center\">\r\n                            <div className=\"w-11/12\">\r\n                                <EditCommentBlock commentBody={\"\"} cancelAction={toggleEditComment} parent={current} updateCb={updateComment} />\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <></>\r\n                }\r\n                <div className=\"flex justify-center\">\r\n                    {\r\n                        isLoading ?\r\n                            <div className=\"w-full flex justify-start\">\r\n                                <p>Loading...</p>\r\n                            </div>\r\n                            :\r\n                            hasComment ?\r\n                                <div className=\"w-11/12\">\r\n                                    <CommentList replies={current.replies} />\r\n                                </div>\r\n                                :\r\n                                <div className=\"w-full flex justify-start\">\r\n                                    <p>No comments...</p>\r\n                                </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <p>Loading...</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comments;","import { useState } from \"react\";\r\nimport Comments from \"../../comments/comments\";\r\nimport { imgify } from \"../../../middlewares/imgify\";\r\nimport { Remarkable } from \"remarkable\";\r\nimport { timeAgo } from \"../../../middlewares/format\";\r\n\r\nconst Blog = ({ props, toggleComments }: any) => {\r\n    let { current } = props;\r\n    let [body, setBody] = useState<string>(\"\");\r\n    let [showAll, setShowAll] = useState<boolean>(false);\r\n\r\n    const md = new Remarkable({ html: true }).use(imgify);\r\n    let imgRegex = /<p>(https?:\\/\\/.*\\.(?:png|jpg))<\\/p>/g;\r\n    let content = body.replace(/(^--.*-$|^\\*\\*.*\\*$|^__.*_$|<hr\\/>)/m, '').replace(/<center>\\[!\\[inkito-banner.png\\].*\\n*<\\/center>$/gm, '').replace(imgRegex, \"<img src='$1' alt='blog-page'/>\").trim();\r\n    let summary = `${content.slice(0, 1000)}...`;\r\n\r\n    const toggleShowAll = () => {\r\n        setShowAll(!showAll);\r\n    }\r\n\r\n    if (current) {\r\n        if (current.body !== body) {\r\n            setBody(current.body);\r\n        }\r\n        return (\r\n            <div className=\"blog flex flex-col absolute w-11/12 h-11/12 p-6 bg-white z-30\">\r\n                <div className=\"flex justify-end\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"blog-btnClose w-8 lg:w-10 text-black text-right cursor-pointer z-40\"\r\n                        fill=\"none\" viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                        onClick={toggleComments}\r\n                    >\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"blog-mainContent w-auto h-full overflow-y-auto m-3 p-3\">\r\n                    <div className=\"w-11/12 flex flex-row items-center\">\r\n                        <h2 className=\"mr-6 font-bold\">{current.title}</h2>\r\n                        <p className=\"mr-6\">published {timeAgo(current.created.slice(0, 10))}</p>\r\n                        <p className=\"mr-1\">by</p>\r\n                        <p className=\"capitalize\">{current.author}</p>\r\n                    </div>\r\n                    <div className=\"horizontal-divider my-4\" />\r\n                    <div className=\"blog-body\" dangerouslySetInnerHTML={{ __html: md.render(showAll ? content : summary) }} />\r\n                    <div className=\"flex justify-end mr-6\">\r\n                        <button className=\"font-bold text-gray-600 px-2\" onClick={toggleShowAll}>\r\n                            {\r\n                                showAll ?\r\n                                    \"Show less...\"\r\n                                    :\r\n                                    \"Show more...\"\r\n                            }\r\n                        </button>\r\n                    </div>\r\n                    <Comments current={current} />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"blog flex absolute w-screen h-screen bg-black justify-center items-center\">\r\n                <div className=\"loader ease-linear rounded-full border-2 border-t-2 border-gray-400 h-14 w-14\"></div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Blog;","\r\nconst Controls = ({ go, config }) => {\r\n    return (\r\n        <div id=\"reader-controls\" className={`w-full h-full ${config.mode === \"vertical\" ? \"hidden\" : \"flex\"} flex-row justify-between items-center z-10`}>\r\n            <div\r\n                className=\"flex flex-col justify-center items-start w-1/3 h-full cursor-pointer left opacity-0 hover:opacity-100 transition duration-500 ease-in-out z-10\"\r\n                onClick={go.previous}\r\n            >\r\n                <svg className=\"w-16 ml-10 md:w-32\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke={`${config.background === \"white\" ? \"black\" : \"white\"}`}>\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                </svg>\r\n            </div>\r\n            <div className=\"w-1/3 h-full center\"></div>\r\n            <div\r\n                className=\"flex flex-col justify-center items-end w-1/3 h-full cursor-pointer right opacity-0 hover:opacity-100 transition duration-500 ease-in-out z-10\"\r\n                onClick={go.next}\r\n            >\r\n                <svg className=\"w-16 mr-10 md:w-32\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke={`${config.background === \"white\" ? \"black\" : \"white\"}`}>\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Top = ({ props, showMenu, setShowMenu }: any) => {\r\n    let { seriesInfo, episode, page } = props;\r\n\r\n    const FollowerCount = observer(({ followers }: { followers: string[] }) => {\r\n        if (followers && followers.length > 0) {\r\n            return (\r\n                <p className=\"text-xs text-gray-300\">{`${followers.length} followers`}</p>\r\n            )\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n    })    \r\n\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                `absolute top-0 w-screen z-10 select-none w-11/12 h-20 flex flex-row justify-center items-center transition duration-500 ease-in-out \r\n                ${showMenu ? \"opacity-100\" : \"opacity-0 delay-1000\"}`\r\n            }\r\n            onMouseOver={() => setShowMenu(true)} \r\n            onMouseLeave={() => setShowMenu(false)}\r\n        >\r\n            <div className=\"flex-1 z-10\">\r\n                <h1 className=\"text-white text-center uppercase\">\r\n                    <Link to=\"/\">\r\n                        Inkito\r\n                    </Link>\r\n                </h1>\r\n            </div>\r\n\r\n\r\n            <div className=\"w-full flex flex-1 flex-row w-auto justify-center items-center m-2 z-10 text-gray-300\">\r\n                <h3 className=\"uppercase whitespace-nowrap mx-4 text-white\">{seriesInfo.title}</h3>\r\n\r\n                <div className=\"flex-row text-gray-400 mx-4 hidden md:flex\">\r\n                    {\r\n                        episode + page === 0 ?\r\n                            <p className=\"mx-1\">Cover</p> :\r\n                            <>\r\n                                <div className=\"flex flex-row\">\r\n                                    <p className=\"mx-1\">Episode</p>\r\n                                    <p>{episode + 1}</p>\r\n                                </div>\r\n                                <div className=\"flex flex-row\">\r\n                                    <p className=\"mx-1\">Page</p>\r\n                                    <p>{page + 1}</p>\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"flex flex-1 flex-row mx-4 text-white z-10 justify-center items-center\">\r\n                <img className=\"h-10 rounded-full\" src={`https://images.hive.blog/u/${seriesInfo.author}/avatar`} />\r\n                <div className=\"flex flex-col justify-center items-start mx-4\">\r\n                    <p className=\"uppercase\">{seriesInfo.author}</p>\r\n                    <FollowerCount followers={seriesInfo.followers}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`absolute w-full h-full bg-black opacity-80`} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Top;","import { useState } from \"react\";\r\nimport Bottom from \"./bottom/bottom\";\r\nimport Blog from \"./blog\";\r\nimport Controls from \"./controls\";\r\nimport Top from \"./top\";\r\n\r\nconst Menu = (props: any) => {\r\n    let [showMenu, setShowMenu] = useState<boolean>(false);\r\n    let [showComments, setShowComments] = useState<boolean>(false);\r\n\r\n    const toggleComments = () => {\r\n        setShowComments(!showComments);\r\n    }\r\n\r\n    return (\r\n        <div id=\"reader-menu\" className=\"fixed top-0 w-full h-full flex flex-col items-center justify-center z-10\">\r\n            <Controls go={props.go} config={props.config} />\r\n            <Top props={props} showMenu={showMenu} setShowMenu={(e: boolean) => setShowMenu(e)} />\r\n            {\r\n                showComments ?\r\n                    <Blog props={props} toggleComments={toggleComments} /> :\r\n                    <></>\r\n            }\r\n            <Bottom props={props} showMenu={showMenu} setShowMenu={(e: boolean) => setShowMenu(e)} toggleComments={toggleComments} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React, { useEffect, useState } from 'react';\r\nimport StoreContext from '../stores/appStore';\r\nimport { getUrlVars } from '../middlewares/url';\r\nimport { seriesIdGenerator, isContentRanked } from '../middlewares/format';\r\nimport Page from '../components/reader/page';\r\nimport Pages from '../components/reader/pages';\r\nimport Menu from '../components/reader/menu/menu';\r\nimport { autorun } from \"mobx\";\r\n\r\ntype ReaderProps = { type: string };\r\ntype ConfigProps = { mode: string, sort: string, background: string, transition: boolean };\r\ntype seriesProps = { image?: string[], permlink?: string };\r\ntype userDataProps = { isSubscribed: boolean, autoVoteOn: boolean, disableVote: boolean, voting_power: number };\r\n\r\nconst Reader = ({ type }: ReaderProps) => {\r\n  const store = React.useContext(StoreContext) as any;\r\n  var props = getUrlVars(\"reader/\");\r\n\r\n  let [seriesInfo, setSeriesInfo] = useState<any>({});\r\n  let [ranked, setRanked] = useState<any[]>([]);\r\n  let [voted, setVoted] = useState<number>(0);\r\n  let [permlinks, setPermlinks] = useState<string[]>([]);\r\n  let [series, setSeries] = useState<seriesProps[]>([]);\r\n  let [episode, setEpisode] = useState<number>(0);\r\n  let [config, setConfig] = useState<ConfigProps>({ mode: \"spread\", sort: \"rightToLeft\", background: \"black\", transition: true });\r\n  let [page, setPage] = useState(0);\r\n  let [userData, setUserData] = useState<userDataProps>({ isSubscribed: false, autoVoteOn: false, disableVote: false, voting_power: 0 });\r\n  let [toggleRender, setToggleRender] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if (props.author && props.seriesTitle) {\r\n      processPermlinks(props.author, props.seriesTitle);\r\n    }\r\n    let seriesId = seriesIdGenerator(props.author, props.seriesTitle);\r\n    processSeriesInfo(seriesId);\r\n\r\n    if (true || store.userDetail.name) {\r\n      let username: string = store.userDetail.name || \"jrej\";\r\n      getUserInfo(username);\r\n    } \r\n  }, [])\r\n\r\n  const getUserInfo = async (username : string) => {\r\n    let info = await store.getUserInfo(username);\r\n    if (info && info.length > 0) {\r\n      //voting power shows 0 when at 100%.\r\n      userData.voting_power = info[0].voting_power !== 0 ? info[0].voting_power : 10000;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (permlinks && permlinks.length > 0) {\r\n      addEpisodes();\r\n    }\r\n  }, [episode, permlinks])\r\n  \r\n  useEffect(() => autorun(() => {\r\n    if (store.seriesInfo.followers && seriesInfo.followers === undefined) {\r\n      setSeriesInfo({...seriesInfo, followers: store.seriesInfo.followers});\r\n    }\r\n  }),[seriesInfo, store.seriesInfo.followers]);\r\n\r\n  const processPermlinks = async (author: string, seriesTitle: string) => {\r\n    let permlinks = await store.fetchPermlinks(author, seriesTitle);\r\n    if (permlinks) {\r\n      setPermlinks(permlinks);\r\n      addEpisodes();\r\n\r\n      let emptySeries: {}[] = [];\r\n      emptySeries.length = permlinks.length;\r\n      setSeries(emptySeries);\r\n\r\n      let ranked: any[] = await getRankedNumber(props.author, permlinks);\r\n      setRanked(ranked);\r\n    }\r\n  }\r\n\r\n  const getRankedNumber = (author: string, permlinks: string[]) => new Promise<any[]>(async (resolve) => {\r\n    let ranked: any[] = [];\r\n    // let votedCount: number = 0;\r\n    for (let i = permlinks.length - 1; i >= 0; i--) {\r\n      let content: any = await fetchEpisode(author, permlinks[i], i);\r\n      if (content) {\r\n        let isRanked = isContentRanked(content.created);\r\n        if (isRanked) {\r\n          ranked.push(content);\r\n          // if (content.active_votes && content.active_votes.length > 0) {\r\n          //   if (content.active_votes.some((vote: any) => vote.voter === store.userDetail.name)) {\r\n          //     votedCount = votedCount + 1;\r\n          //   }\r\n          // }\r\n        } else {\r\n          resolve(ranked);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  const processSeriesInfo = async (seriesId: string) => {\r\n    let infos = await store.fetchSeriesInfo(seriesId);\r\n    if (infos) {\r\n      setSeriesInfo(infos);\r\n      if (infos && infos.config) {\r\n        if (infos.config.background) {\r\n          setConfig({ ...config, background: infos.config.background })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const addEpisodes = async () => {\r\n    if (!series[episode]) {\r\n      await fetchEpisode(props.author, permlinks[episode], episode)\r\n    }\r\n    if (!series[episode + 1] && episode < permlinks.length) {\r\n      await fetchEpisode(props.author, permlinks[episode + 1], episode + 1);\r\n    }\r\n    if (!series[episode - 1] && episode > 0) {\r\n      await fetchEpisode(props.author, permlinks[episode - 1], episode - 1);\r\n    }\r\n  }\r\n\r\n  const addAllEpisodes = async () => {\r\n    if (permlinks.length > 0) {\r\n      for (let i = episode; i < permlinks.length; i++) {\r\n        if (!series[i] && episode < permlinks.length) {\r\n          await fetchEpisode(props.author, permlinks[i], i);\r\n        }\r\n      }\r\n      for (let i = episode; i >= 0; i--) {\r\n        if (!series[i]) {\r\n          await fetchEpisode(props.author, permlinks[i], i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const fetchEpisode = (author: string, permlink: string, episodeNumber: number) => new Promise(async (resolve) => {\r\n    if (permlink) {\r\n      if (!series[episodeNumber]) {\r\n        let content = await store.fetchSeriesDetail(author, permlink, episodeNumber);\r\n        let tempSeries = series;\r\n        if (content) {\r\n          //remove blacklist images \r\n          const blackListImages = [\r\n            \"https://images.hive.blog/DQmXcA3xhDNEaesBeRzy3eq3Jw1zyGQEjzHY1DPc84P7peA/inkito-banner.png\",\r\n            \"https://img.youtube.com/vi/WfD8Dnh2xho/0.jpg\", \"http://eurobeast.dk/misc/public/Katharsisdrill_rund_150X150.png\",\r\n            \"https://i.creativecommons.org/l/by/4.0/88x31.png\", \"http://phillfromgchq.co.uk/images/other/bitcoin.png\",\r\n            \"http://phillfromgchq.co.uk/images/other/katharsisdrill.png\",\r\n            \"http://phillfromgchq.co.uk/images/other/steem.png\",\r\n            \"http://phillfromgchq.co.uk/images/other/flattr.png\",\r\n            \"http://phillfromgchq.co.uk/images/other/patreon.png\",\r\n            \"http://phillfromgchq.co.uk/images/other/flattr.png\",\r\n            \"http://eurobeast.dk/misc/public/Katharsisdrill_rund_150X150.png\",\r\n            \"http://eurobeast.dk/misc/Steemit/September/Phill001_ikon.jpg\",\r\n            \"http://phillfromgchq.co.uk/images/other/streg.png\",\r\n            \"https://img1.steemit.com/0x0/http://eurobeast.dk/misc/Steemit/Serier/Phill_link.jpg\",\r\n            \"http://phillfromgchq.co.uk/images/other/Patreon_logo_ny.png\",\r\n            \"http://phillfromgchq.co.uk/images/other/liberapay_logo.png\",\r\n            \"http://phillfromgchq.co.uk/images/other/liberapay_logo_ny.png\"\r\n          ];\r\n          const regexBlackList = [/http:\\/\\/eurobeast\\.dk\\/.*450\\.jpg/g]\r\n\r\n          content.image = content.image.filter((image: string) => !blackListImages.includes(image) && !regexBlackList.some(regex => image.match(regex)));\r\n          tempSeries[episodeNumber] = content;\r\n          setToggleRender(episodeNumber)\r\n          setSeries(tempSeries);\r\n          if (content.image.length === 1 && config.mode === \"spread\") {\r\n            setConfig({ ...config, mode: \"page\" })\r\n            //disable spread button;\r\n          }\r\n          resolve(content);\r\n        } else {\r\n          resolve(undefined);\r\n        }\r\n      }\r\n    }\r\n    resolve(undefined);\r\n  })\r\n\r\n  const actions = {\r\n    toggleBgColor: () => {\r\n      if (config.background === \"white\") {\r\n        setConfig({ ...config, background: \"black\" });\r\n      } else {\r\n        setConfig({ ...config, background: \"white\" });\r\n      }\r\n    },\r\n    toggleMode: (string: string) => {\r\n      setConfig({ ...config, mode: string });\r\n    },\r\n    toggleAutoVote: () => {\r\n      setUserData({ ...userData, autoVoteOn: !userData.autoVoteOn });\r\n    },\r\n    vote: () => {\r\n      if (/*ranked && ranked.length > 0*/true) {\r\n        let content = ranked[0];\r\n        let author = content?.author;\r\n        let permlink = content?.permlink;\r\n        let weight = 10000;\r\n        let voter = store.userDetail.name;\r\n        store.vote(voter, author, permlink, weight, undefined);\r\n      }\r\n    },\r\n    fetchAll: () => {\r\n      addAllEpisodes();\r\n    }\r\n  }\r\n\r\n  const go = {\r\n    next: () => {\r\n      let currentLength = series[episode]?.image?.length || 0\r\n      if (config.mode === \"spread\") {\r\n        if (page === 0 && episode === 0) {\r\n          setPage(page + 1);\r\n        } else if (page < currentLength - 2) {\r\n          //next page\r\n          setPage(page + 2);\r\n        } else {\r\n          if (page < currentLength - 1 && ((episode > 0 && currentLength % 2 > 0) || (episode === 0 && currentLength % 2 === 0))) {\r\n            setPage(page + 1);\r\n          } else {\r\n            //next episode, first page\r\n            if (episode < permlinks.length - 1) {\r\n              setEpisode(episode + 1)\r\n              setPage(0);\r\n            }\r\n          }\r\n        }\r\n      } else if (config.mode === \"vertical\") {\r\n        if (episode < permlinks.length - 1) {\r\n          setEpisode(episode + 1)\r\n        }\r\n      } else {\r\n        if (page < currentLength - 1) {\r\n          //next page\r\n          setPage(page + 1);\r\n        } else {\r\n          //next episode, first page\r\n          if (episode < permlinks.length - 1) {\r\n            setEpisode(episode + 1)\r\n            setPage(0);\r\n          }\r\n        }\r\n      }\r\n\r\n    },\r\n    previous: () => {\r\n      let currentLength = series[episode]?.image?.length || 0\r\n      let previousLength = series[episode - 1]?.image?.length || 0\r\n      if (config.mode === \"spread\") {\r\n        if (page === 1) {\r\n          setPage(page - 1);\r\n        } else if (page > 1) {\r\n          if (page === currentLength - 1) {\r\n            if (previousLength % 2 > 0) {\r\n              setPage(page - 1);\r\n            } else {\r\n              setPage(page - 2);\r\n            }\r\n          } else {\r\n            setPage(page - 2);\r\n          }\r\n        } else {\r\n          if (episode > 0) {\r\n            if (((episode > 1 && previousLength % 2 > 0) || (episode === 1 && previousLength % 2 === 0))) {\r\n              setEpisode(episode - 1);\r\n              setPage(previousLength - 1);\r\n            } else {\r\n              setEpisode(episode - 1);\r\n              setPage(previousLength - 2);\r\n            }\r\n          }\r\n        }\r\n      } else if (config.mode === \"vertical\") {\r\n        if (episode > 0) {\r\n          setEpisode(episode - 1)\r\n        }\r\n      } else {\r\n        if (episode > 0) {\r\n          setEpisode(episode - 1)\r\n          setPage(previousLength - 1);\r\n        } else if (page > 0) {\r\n          setPage(page - 1);\r\n        }\r\n      }\r\n    },\r\n    to: (episode: number, page: number) => {\r\n      setEpisode(episode);\r\n      if (page) {\r\n        setPage(page);\r\n      } else {\r\n        setPage(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`w-screen relative bg-${config.background} ${config.mode === \"vertical\" ? \"overflow-x-hidden\" : \"overflow-hidden h-screen\"}`} >\r\n      <Menu actions={actions} go={go} toggleRender={toggleRender} config={config} series={series} current={series[episode]} seriesInfo={{ ...seriesInfo, ranked: ranked/*, voted: voted*/ }} episode={episode} page={page} userData={userData} />\r\n      <div id=\"vertical-body\" className={`flex flex-col ${config.mode === \"vertical\" ? \"justify-start items-center px-0 md:px-20 lg:px-30 xl:px-96\" : \"hidden\"} z-0`}>\r\n        <Pages config={config} episode={episode} page={page} series={series} toggleRender={toggleRender} setPage={setPage} setEpisode={setEpisode} />\r\n      </div>\r\n      <div id=\"page-body\" className={`flex flex-col ${config.mode === \"vertical\" ? \"hidden\" : \"w-screen absolute top-0 h-screen justify-center items-center\"} z-0`}>\r\n        <Page episode={episode} page={page} images={series[episode] && series[episode].image} config={config} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Reader;\r\n","export const getUrlVars = (reference : string) => {\r\n    var address = window.location.href;\r\n\r\n    var indexOfReader = address.indexOf(reference);\r\n    address = address.slice(indexOfReader + reference.length, address.length);\r\n    \r\n    var params = address.split(\"/\");\r\n\r\n    type propsType = {\r\n        author: string,\r\n        seriesTitle: string,\r\n        currentPage: number\r\n    }\r\n\r\n    let props = {} as propsType;\r\n    props.author = params[0];\r\n    props.seriesTitle = params[1];\r\n    props.currentPage = parseInt(params[2]);\r\n    \r\n    return props;\r\n}","import 'core-js';\r\nimport React, { useEffect } from 'react';\r\nimport StoreContext from '../stores/appStore';\r\nimport {\r\n  HashRouter,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport Reader from \"./reader\";\r\n\r\nconst Routes = () => {\r\n  const store = React.useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    // getUserDetail();\r\n\r\n    // //store.temporalLogin();\r\n    // store.toggleNavMenu(false);\r\n    // store.checkCookieConsent();\r\n\r\n    // if (store.loginLink === \"\") {\r\n    //   store.initHSLogin();\r\n    // }\r\n\r\n    window.addEventListener('keydown', handleFirstTab);\r\n    // window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      // window.removeEventListener('scroll', handleScroll); \r\n      window.removeEventListener('keydown', handleFirstTab);\r\n    }\r\n  })\r\n\r\n  const handleFirstTab = (e) => {\r\n    if (e.keyCode === 9) { // the \"I am a keyboard user\" key\r\n      document.body.classList.add('user-is-tabbing');\r\n      window.removeEventListener('keydown', handleFirstTab);\r\n    }\r\n  }\r\n\r\n  // const handleScroll = () => {\r\n  //   var st = document.documentElement.scrollTop;\r\n  //   if (st > 400) {\r\n  //     store.toggleLogin(false);\r\n  //   }\r\n\r\n  // }\r\n\r\n  // const getUserDetail = () => {\r\n  //   const accessToken = localStorage.getItem('access-token');\r\n  //   const user = localStorage.getItem('users');\r\n  //   if (accessToken && user) {\r\n  //     store.getUserDetail(JSON.parse(accessToken), JSON.parse(user));\r\n  //   } else {\r\n  //     store.getUserDetail();\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <HashRouter basename='/'>\r\n      <div className=\"routes overflow-x-hidden\">\r\n        <Switch >\r\n          <Route path={'/comic-reader'}>\r\n            <Reader type={\"comics\" as string} />\r\n          </Route>\r\n          {/* <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/comics\">\r\n            <FullDisplay type={\"comics\"} />\r\n          </Route>\r\n          <Route exact path=\"/novels\">\r\n            <FullDisplay type={\"novels\"} />\r\n          </Route>\r\n          <Route path=\"/novelReader\">\r\n            <Reader type={\"novels\"} />\r\n          </Route>\r\n          <Route path=\"/@*\">\r\n            <ProfilePage />\r\n          </Route>\r\n          <Route path=\"/publish*\">\r\n            <PublishPage />\r\n          </Route>  \r\n          <Route path=\"/terms\">\r\n            <Terms />\r\n          </Route>\r\n          <Route path=\"/privacy\">\r\n            <Privacy />\r\n          </Route>\r\n          <Route path=\"/faq\">\r\n            <Faq />\r\n          </Route>\r\n          <Route component={Page404} /> */}\r\n        </Switch>\r\n        {/* <Footer />\r\n        <CookieBanner /> */}\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport { Helmet } from \"react-helmet-async\";\nimport './app.scss';\n\nimport Routes from \"../routes/routes\";\n\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>Inkito | Help authors get crypto currency rewards for their story</title>\n        <meta name=\"description\" content=\"Inkito is a comic and novel hosting powered by the Hive blockchain. Creators can earn crypto currency for their content in proportion to the attention received.\" />\n      </Helmet>\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StoreProvider } from './stores/appStore';\nimport { HelmetProvider } from 'react-helmet-async';\nimport './index.scss';\nimport App from './containers/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <HelmetProvider>\n          <App />\n      </HelmetProvider>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\nfunction parseTokens(state) {\r\n  var i, j, l, tokens, sources, alt, nodes, blockTokens = state.tokens;\r\n  //linkifier = null, links, autolinker;\r\n  var afterRule = false;\r\n  var firstImage = true;\r\n  for (j = 0, l = blockTokens.length; j < l; j++) {\r\n    if (blockTokens[j].type !== 'inline') {\r\n      if (blockTokens[j].type === 'hr') {\r\n        afterRule = true;\r\n      }\r\n      continue;\r\n    }\r\n    tokens = blockTokens[j].children;\r\n    nodes = [];\r\n\r\n    // We scan from the end, to keep position when new tags added.\r\n    // Use reversed logic in links start/end match\r\n    for (i = tokens.length - 1; i >= 0; i--) {\r\n      if (tokens[i]) {\r\n        let regex = /(https?:\\/\\/.*\\.(?:png|jpg))/;\r\n        if (tokens[i].type === 'text' && tokens[i].content.match(regex)) {\r\n\r\n          sources = tokens[i].content.match(regex);\r\n\r\n          alt = sources[0].slice(-14, sources[0].length).replace(/-/gi, \"\");\r\n\r\n          nodes.push({\r\n            type: \"image\",\r\n            src: sources[0],\r\n            title: \"\",\r\n            alt: afterRule ? \"infoImage\" : alt,\r\n            level: tokens[i].level\r\n          });\r\n        }\r\n\r\n        if (!afterRule && tokens[i].type === 'htmltag' && tokens[i].content === \"<hr/>\") {\r\n          afterRule = true;\r\n        }\r\n\r\n        if (tokens[i].type === 'image' && firstImage) {\r\n          firstImage = false;\r\n        } else if (tokens[i].type === 'image' && afterRule && !firstImage) {\r\n          tokens[i].alt = \"infoImage\"\r\n        }\r\n\r\n        if (nodes.length > 0) {\r\n          blockTokens[j].children = tokens = [].concat(nodes);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction imgify(md) {\r\n  md.core.ruler.push('imgify', parseTokens);\r\n}\r\n\r\nexports.imgify = imgify;\r\n"],"sourceRoot":""}